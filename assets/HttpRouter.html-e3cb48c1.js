import{_ as e,V as o,W as c,X as n,Y as s,Z as t,$ as p,F as u}from"./framework-8edddef6.js";const i={},l=n("h1",{id:"httprouter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#httprouter","aria-hidden":"true"},"#"),s(" HttpRouter")],-1),r={href:"https://github.com/julienschmidt/httprouter",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>Gin的路由组件采用的是<code>HttpRouter</code>，这同样也是一个轻量，高性能的路由组件，整个组件只有三个<code>.go</code>文件，代码十分的简洁，其主要有以下特点。</p><p><strong>一对一匹配</strong>：一个请求只能匹配到零个或一个路由，且有利于SEO优化。</p><p><strong>路径自动校正</strong>：随意选择喜欢的URL风格，就算多了或者少了一个斜杠，也会自动重定向。如果有大小写错误的话，查找时也会忽略大小写进行正确的重定向。</p><p><strong>路由参数自动解析</strong>：只要给路径段一个名称，路由器就会把动态值传递给你。由于路由器的设计，路径参数解析的占用非常低廉。</p><p><strong>零垃圾</strong>：在路由分配与调度的过程中，不会产生任何内存垃圾。</p><p><strong>RefstfulAPI支持</strong>：路由器的设计鼓励合理的分层的Restful API。</p><p><strong>错误处理</strong>：可以设置一个错误处理器来处理请求中的异常，路由器会将其捕获并记录，然后重定向到错误页面。</p><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h2><p>就像是<code>springboot</code>一样，一个函数绑定一个URL且对应一个处理器。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
   <span class="token string">&quot;fmt&quot;</span>
   <span class="token string">&quot;github.com/julienschmidt/httprouter&quot;</span>
   <span class="token string">&quot;log&quot;</span>
   <span class="token string">&quot;net/http&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">Hello</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> <span class="token boolean">_</span> httprouter<span class="token punctuation">.</span>Params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">&quot;&lt;h1&gt;Hello World!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   router <span class="token operator">:=</span> httprouter<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> Hello<span class="token punctuation">)</span>
   log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>随后用浏览器或者任何的接口测试工具输入<code>127.0.0.1:8080</code>，即可看到正确的内容，我们可以看到<code>HttpRouter</code>仅仅只是做了路由，实际上依旧是采用的<code>net/http</code>默认组件，<code>gin</code>也是如此，只不过封装的相对而言要更深一点。</p><h2 id="命名参数" tabindex="-1"><a class="header-anchor" href="#命名参数" aria-hidden="true">#</a> 命名参数</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
   <span class="token string">&quot;fmt&quot;</span>
   <span class="token string">&quot;github.com/julienschmidt/httprouter&quot;</span>
   <span class="token string">&quot;log&quot;</span>
   <span class="token string">&quot;net/http&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">Hello</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> ps httprouter<span class="token punctuation">.</span>Params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">&quot;&lt;h1&gt;Hello World!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   router <span class="token operator">:=</span> httprouter<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hello:name&quot;</span><span class="token punctuation">,</span> Hello<span class="token punctuation">)</span>
   log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这次的路由后面加了一个<code>:name</code>，<code>name</code>就是一个命名参数，可以通过<code>httprouter.Params</code>来访问参数切片，可以通过索引或者<code>ByName(name)</code>来获取参数。同样的，你可以把<code>http.handler</code>和<code>http.handlerFunc</code>当作<code>httprouter.handler</code>来使用，路由本身实现了其接口，例如下方的例子。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Hello</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    params <span class="token operator">:=</span> httprouter<span class="token punctuation">.</span><span class="token function">ParamsFromContext</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">//params := r.Context().Value(httprouter.ParamsKey)也可以</span>

    fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">&quot;hello, %s!\\n&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">ByName</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当方法绑定的路由是<code>/user/:user</code>，下面的几种URL的匹配情况</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> /user/gordon              match
 /user/you                 match
 /user/gordon/profile      no match
 /user/                    no match
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你不能将<code>/user/new</code>和<code>/user/:user</code>注册到同一个请求方法上，每一个请求方法应当是相互独立的。</p><h2 id="捕获全部参数" tabindex="-1"><a class="header-anchor" href="#捕获全部参数" aria-hidden="true">#</a> 捕获全部参数</h2><p>第二种类型是捕获全部参数，顾名思义，他们匹配一切，因此必须位于<code>Pattern</code>的尾部。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>Pattern<span class="token punctuation">:</span> <span class="token operator">/</span>src<span class="token comment">/*filepath

 /src/                     match
 /src/somefile.go          match
 /src/subdir/somefile.go   match
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),k=n("code",null,"HttpRouter",-1),v={href:"https://pkg.go.dev/github.com/julienschmidt/httprouter#readme-how-does-it-work",target:"_blank",rel:"noopener noreferrer"},m=p(`<h2 id="options-cors" tabindex="-1"><a class="header-anchor" href="#options-cors" aria-hidden="true">#</a> OPTIONS &amp; CORS</h2><p>有些人可能会希望修改对于OPTIONS的自动响应并设置一些响应头来适配CORS的预检请求，这些需求可以通过使用<code>Router.GlobalOPTIONS</code>handler来实现。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>router<span class="token punctuation">.</span>GlobalOPTIONS <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">HandlerFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Request-Method&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置CORS响应头</span>
        header <span class="token operator">:=</span> w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;Allow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        header<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 适配状态码204</span>
    w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNoContent<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="not-found-处理器" tabindex="-1"><a class="header-anchor" href="#not-found-处理器" aria-hidden="true">#</a> NOT FOUND 处理器</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>可能需要关闭<code>Router.HandleMethodNotAllowed</code>，来避免一些问题。</p></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>router<span class="token punctuation">.</span>NotFound <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">HandlerFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>writer http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> request <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//你的逻辑</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本校验" tabindex="-1"><a class="header-anchor" href="#基本校验" aria-hidden="true">#</a> 基本校验</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>

	<span class="token string">&quot;github.com/julienschmidt/httprouter&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">BasicAuth</span><span class="token punctuation">(</span>h httprouter<span class="token punctuation">.</span>Handle<span class="token punctuation">,</span> requiredUser<span class="token punctuation">,</span> requiredPassword <span class="token builtin">string</span><span class="token punctuation">)</span> httprouter<span class="token punctuation">.</span>Handle <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> ps httprouter<span class="token punctuation">.</span>Params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//获取基本的身份凭据</span>
		user<span class="token punctuation">,</span> password<span class="token punctuation">,</span> hasAuth <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">BasicAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

		<span class="token keyword">if</span> hasAuth <span class="token operator">&amp;&amp;</span> user <span class="token operator">==</span> requiredUser <span class="token operator">&amp;&amp;</span> password <span class="token operator">==</span> requiredPassword <span class="token punctuation">{</span>
			<span class="token comment">// 将请求委派给给予的处理器</span>
			<span class="token function">h</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> r<span class="token punctuation">,</span> ps<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// 否则请求认证</span>
			w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;WWW-Authenticate&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Basic realm=Restricted&quot;</span><span class="token punctuation">)</span>
			http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">StatusText</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Index</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> <span class="token boolean">_</span> httprouter<span class="token punctuation">.</span>Params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Fprint</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">&quot;Not protected!\\n&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Protected</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> <span class="token boolean">_</span> httprouter<span class="token punctuation">.</span>Params<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Fprint</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">&quot;Protected!\\n&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	user <span class="token operator">:=</span> <span class="token string">&quot;gordon&quot;</span>
	pass <span class="token operator">:=</span> <span class="token string">&quot;secret!&quot;</span>

	router <span class="token operator">:=</span> httprouter<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> Index<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/protected/&quot;</span><span class="token punctuation">,</span> <span class="token function">BasicAuth</span><span class="token punctuation">(</span>Protected<span class="token punctuation">,</span> user<span class="token punctuation">,</span> pass<span class="token punctuation">)</span><span class="token punctuation">)</span>

	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function h(b,g){const a=u("ExternalLinkIcon");return o(),c("div",null,[l,n("p",null,[s("仓库地址： "),n("a",r,[s("julienschmidt/httprouter: A high performance HTTP request router that scales well (github.com)"),t(a)])]),d,n("p",null,[k,s("的工作原理是构建大量的前缀树，感兴趣的可以了解："),n("a",v,[s("httprouter package - github.com/julienschmidt/httprouter - Go Packages"),t(a)]),s("。")]),m])}const q=e(i,[["render",h],["__file","HttpRouter.html.vue"]]);export{q as default};
