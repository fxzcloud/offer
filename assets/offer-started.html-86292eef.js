const l=JSON.parse('{"key":"v-3abc6355","path":"/offer/offer-started.html","title":"java基础","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"1. java语言的特点？","slug":"_1-java语言的特点","link":"#_1-java语言的特点","children":[]},{"level":3,"title":"2. 解释一下jvm、jdk、jre。","slug":"_2-解释一下jvm、jdk、jre。","link":"#_2-解释一下jvm、jdk、jre。","children":[]},{"level":3,"title":"3.什么是字节码?采用字节码的好处是什么?","slug":"_3-什么是字节码-采用字节码的好处是什么","link":"#_3-什么是字节码-采用字节码的好处是什么","children":[]},{"level":3,"title":"4.为什么java是解释与编译共存？","slug":"_4-为什么java是解释与编译共存","link":"#_4-为什么java是解释与编译共存","children":[]},{"level":3,"title":"5.了解Oracle JDK 和 OpenJDK的区别吗?","slug":"_5-了解oracle-jdk-和-openjdk的区别吗","link":"#_5-了解oracle-jdk-和-openjdk的区别吗","children":[]},{"level":3,"title":"6.java和c++的区别了解吗？","slug":"_6-java和c-的区别了解吗","link":"#_6-java和c-的区别了解吗","children":[]},{"level":3,"title":"7.字符型常量和字符串常量的区别?","slug":"_7-字符型常量和字符串常量的区别","link":"#_7-字符型常量和字符串常量的区别","children":[]},{"level":3,"title":"8.java注释有哪几种？","slug":"_8-java注释有哪几种","link":"#_8-java注释有哪几种","children":[]},{"level":3,"title":"9.标识符和关键字的区别是什么？","slug":"_9-标识符和关键字的区别是什么","link":"#_9-标识符和关键字的区别是什么","children":[]},{"level":3,"title":"10.java中的关键字有哪些？","slug":"_10-java中的关键字有哪些","link":"#_10-java中的关键字有哪些","children":[]},{"level":3,"title":"11.continue、break 和 return 的区别是什么？","slug":"_11-continue、break-和-return-的区别是什么","link":"#_11-continue、break-和-return-的区别是什么","children":[]},{"level":3,"title":"12.静态方法为什么不能调用非静态成员?","slug":"_12-静态方法为什么不能调用非静态成员","link":"#_12-静态方法为什么不能调用非静态成员","children":[]},{"level":3,"title":"13.静态方法和实例方法有何不同？","slug":"_13-静态方法和实例方法有何不同","link":"#_13-静态方法和实例方法有何不同","children":[]},{"level":3,"title":"14.重载和重写的区别?","slug":"_14-重载和重写的区别","link":"#_14-重载和重写的区别","children":[]},{"level":3,"title":"15.什么是可变长度参数？","slug":"_15-什么是可变长度参数","link":"#_15-什么是可变长度参数","children":[]},{"level":3,"title":"16.Java 中的几种基本数据类型了解么？","slug":"_16-java-中的几种基本数据类型了解么","link":"#_16-java-中的几种基本数据类型了解么","children":[]},{"level":3,"title":"17.基本类型和包装类型的区别？","slug":"_17-基本类型和包装类型的区别","link":"#_17-基本类型和包装类型的区别","children":[]},{"level":3,"title":"18.包装类型的缓存机制了解么？","slug":"_18-包装类型的缓存机制了解么","link":"#_18-包装类型的缓存机制了解么","children":[]},{"level":3,"title":"19.自动装箱与拆箱了解吗？原理是什么？","slug":"_19-自动装箱与拆箱了解吗-原理是什么","link":"#_19-自动装箱与拆箱了解吗-原理是什么","children":[]},{"level":3,"title":"20.面向对象和面向过程的区别？","slug":"_20-面向对象和面向过程的区别","link":"#_20-面向对象和面向过程的区别","children":[]},{"level":3,"title":"21.成员变量与局部变量的区别？","slug":"_21-成员变量与局部变量的区别","link":"#_21-成员变量与局部变量的区别","children":[]},{"level":3,"title":"22.创建一个对象用什么运算符?对象实体与对象引用有何不同?","slug":"_22-创建一个对象用什么运算符-对象实体与对象引用有何不同","link":"#_22-创建一个对象用什么运算符-对象实体与对象引用有何不同","children":[]},{"level":3,"title":"23.对象的相等和引用相等的区别？","slug":"_23-对象的相等和引用相等的区别","link":"#_23-对象的相等和引用相等的区别","children":[]},{"level":3,"title":"24.类的构造方法的作用是什么?如果一个类没有声明构造方法，该程序能正确执行吗?","slug":"_24-类的构造方法的作用是什么-如果一个类没有声明构造方法-该程序能正确执行吗","link":"#_24-类的构造方法的作用是什么-如果一个类没有声明构造方法-该程序能正确执行吗","children":[]},{"level":3,"title":"25.构造方法有哪些特点？是否可被 override?","slug":"_25-构造方法有哪些特点-是否可被-override","link":"#_25-构造方法有哪些特点-是否可被-override","children":[]},{"level":3,"title":"26.面向对象三大特征了解吗？","slug":"_26-面向对象三大特征了解吗","link":"#_26-面向对象三大特征了解吗","children":[]},{"level":3,"title":"27.接口和抽象类有什么共同点和区别？","slug":"_27-接口和抽象类有什么共同点和区别","link":"#_27-接口和抽象类有什么共同点和区别","children":[]},{"level":3,"title":"28.深拷贝和浅拷贝区别了解吗？什么是引用拷贝？","slug":"_28-深拷贝和浅拷贝区别了解吗-什么是引用拷贝","link":"#_28-深拷贝和浅拷贝区别了解吗-什么是引用拷贝","children":[]},{"level":3,"title":"29.== 和 equals() 的区别？","slug":"_29-和-equals-的区别","link":"#_29-和-equals-的区别","children":[]},{"level":3,"title":"30.hashCode() 有什么用？","slug":"_30-hashcode-有什么用","link":"#_30-hashcode-有什么用","children":[]},{"level":3,"title":"31.为什么要有 hashCode？","slug":"_31-为什么要有-hashcode","link":"#_31-为什么要有-hashcode","children":[]},{"level":3,"title":"32.为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"_32-为什么重写-equals-时必须重写-hashcode-方法","link":"#_32-为什么重写-equals-时必须重写-hashcode-方法","children":[]},{"level":3,"title":"33.String、StringBuffer、StringBuilder 的区别？","slug":"_33-string、stringbuffer、stringbuilder-的区别","link":"#_33-string、stringbuffer、stringbuilder-的区别","children":[]},{"level":3,"title":"34.String 为什么是不可变的?","slug":"_34-string-为什么是不可变的","link":"#_34-string-为什么是不可变的","children":[]},{"level":3,"title":"35.字符串拼接用“+” 还是 StringBuilder?","slug":"_35-字符串拼接用-还是-stringbuilder","link":"#_35-字符串拼接用-还是-stringbuilder","children":[]},{"level":3,"title":"36.String#equals() 和 Object#equals() 有何区别？","slug":"_36-string-equals-和-object-equals-有何区别","link":"#_36-string-equals-和-object-equals-有何区别","children":[]},{"level":3,"title":"37.字符串常量池的作用了解吗？","slug":"_37-字符串常量池的作用了解吗","link":"#_37-字符串常量池的作用了解吗","children":[]},{"level":3,"title":"38.String s1 = new String(\\"abc\\");这句话创建了几个字符串对象？","slug":"_38-string-s1-new-string-abc-这句话创建了几个字符串对象","link":"#_38-string-s1-new-string-abc-这句话创建了几个字符串对象","children":[]},{"level":3,"title":"39.intern 方法有什么作用?","slug":"_39-intern-方法有什么作用","link":"#_39-intern-方法有什么作用","children":[]},{"level":3,"title":"40.Exception 和 Error 有什么区别？","slug":"_40-exception-和-error-有什么区别","link":"#_40-exception-和-error-有什么区别","children":[]},{"level":3,"title":"41.Checked Exception 和 Unchecked Exception 有什么区别？","slug":"_41-checked-exception-和-unchecked-exception-有什么区别","link":"#_41-checked-exception-和-unchecked-exception-有什么区别","children":[]},{"level":3,"title":"42.Throwable 类常用方法有哪些？","slug":"_42-throwable-类常用方法有哪些","link":"#_42-throwable-类常用方法有哪些","children":[]},{"level":3,"title":"43.try-catch-finally 如何使用？","slug":"_43-try-catch-finally-如何使用","link":"#_43-try-catch-finally-如何使用","children":[]},{"level":3,"title":"44.finally 中的代码一定会执行吗？","slug":"_44-finally-中的代码一定会执行吗","link":"#_44-finally-中的代码一定会执行吗","children":[]},{"level":3,"title":"45.如何使用 try-with-resources 代替try-catch-finally？","slug":"_45-如何使用-try-with-resources-代替try-catch-finally","link":"#_45-如何使用-try-with-resources-代替try-catch-finally","children":[]},{"level":3,"title":"46.什么是泛型？有什么作用？","slug":"_46-什么是泛型-有什么作用","link":"#_46-什么是泛型-有什么作用","children":[]},{"level":3,"title":"47.泛型的使用方式有哪几种？","slug":"_47-泛型的使用方式有哪几种","link":"#_47-泛型的使用方式有哪几种","children":[]},{"level":3,"title":"48.何为反射？反射机制优缺点？","slug":"_48-何为反射-反射机制优缺点","link":"#_48-何为反射-反射机制优缺点","children":[]},{"level":3,"title":"49.反射的有哪些应用场景？","slug":"_49-反射的有哪些应用场景","link":"#_49-反射的有哪些应用场景","children":[]},{"level":3,"title":"50.什么是注解？","slug":"_50-什么是注解","link":"#_50-什么是注解","children":[]},{"level":3,"title":"51.什么是序列化?什么是反序列化?","slug":"_51-什么是序列化-什么是反序列化","link":"#_51-什么是序列化-什么是反序列化","children":[]},{"level":3,"title":"52.Java 序列化中如果有些字段不想进行序列化，怎么办？","slug":"_52-java-序列化中如果有些字段不想进行序列化-怎么办","link":"#_52-java-序列化中如果有些字段不想进行序列化-怎么办","children":[]},{"level":3,"title":"53.Java 中 IO 流分为几种?","slug":"_53-java-中-io-流分为几种","link":"#_53-java-中-io-流分为几种","children":[]},{"level":3,"title":"54.既然有了字节流,为什么还要有字符流?","slug":"_54-既然有了字节流-为什么还要有字符流","link":"#_54-既然有了字节流-为什么还要有字符流","children":[]},{"level":3,"title":"55.Java 中只有值传递？","slug":"_55-java-中只有值传递","link":"#_55-java-中只有值传递","children":[]},{"level":3,"title":"56.序列化协议对应于 TCP/IP 4 层模型的哪一层？","slug":"_56-序列化协议对应于-tcp-ip-4-层模型的哪一层","link":"#_56-序列化协议对应于-tcp-ip-4-层模型的哪一层","children":[]},{"level":3,"title":"57.什么是泛型擦除？","slug":"_57-什么是泛型擦除","link":"#_57-什么是泛型擦除","children":[]},{"level":3,"title":"58.JDK 动态代理和 CGLIB 动态代理对比？","slug":"_58-jdk-动态代理和-cglib-动态代理对比","link":"#_58-jdk-动态代理和-cglib-动态代理对比","children":[]},{"level":3,"title":"59.静态代理和动态代理的对比？","slug":"_59-静态代理和动态代理的对比","link":"#_59-静态代理和动态代理的对比","children":[]},{"level":3,"title":"60.有哪些常见的 IO 模型?","slug":"_60-有哪些常见的-io-模型","link":"#_60-有哪些常见的-io-模型","children":[]},{"level":3,"title":"61.讲讲java中常见的三种IO模型？","slug":"_61-讲讲java中常见的三种io模型","link":"#_61-讲讲java中常见的三种io模型","children":[]},{"level":3,"title":"62.java创建对象有几种方式？","slug":"_62-java创建对象有几种方式","link":"#_62-java创建对象有几种方式","children":[]},{"level":3,"title":"63.final有哪些用法？","slug":"_63-final有哪些用法","link":"#_63-final有哪些用法","children":[]},{"level":3,"title":"64.OOM遇到过哪些情况，SOF呢?","slug":"_64-oom遇到过哪些情况-sof呢","link":"#_64-oom遇到过哪些情况-sof呢","children":[]},{"level":3,"title":"65.说明一下public static void main(String args[])这段声明里每个关键字的作用?","slug":"_65-说明一下public-static-void-main-string-args-这段声明里每个关键字的作用","link":"#_65-说明一下public-static-void-main-string-args-这段声明里每个关键字的作用","children":[]},{"level":3,"title":"66.public，private，protected的区别，继承方法与访问权限","slug":"_66-public-private-protected的区别-继承方法与访问权限","link":"#_66-public-private-protected的区别-继承方法与访问权限","children":[]},{"level":3,"title":"67.short s1 = 1; s1 = s1 + 1;有错吗？short s1 = 1; s1 += 1;有错吗？","slug":"_67-short-s1-1-s1-s1-1-有错吗-short-s1-1-s1-1-有错吗","link":"#_67-short-s1-1-s1-s1-1-有错吗-short-s1-1-s1-1-有错吗","children":[]},{"level":3,"title":"68.static的独特之处?","slug":"_68-static的独特之处","link":"#_68-static的独特之处","children":[]},{"level":3,"title":"69.程序初始化的顺序","slug":"_69-程序初始化的顺序","link":"#_69-程序初始化的顺序","children":[]},{"level":3,"title":"70.clone方法的保护机制","slug":"_70-clone方法的保护机制","link":"#_70-clone方法的保护机制","children":[]},{"level":3,"title":"71.Java中由SubString方法是否会引起内存泄漏?","slug":"_71-java中由substring方法是否会引起内存泄漏","link":"#_71-java中由substring方法是否会引起内存泄漏","children":[]},{"level":3,"title":"72.Java中提供了哪两种用于多态的机制?","slug":"_72-java中提供了哪两种用于多态的机制","link":"#_72-java中提供了哪两种用于多态的机制","children":[]},{"level":3,"title":"73.在Java中哪个数据类型可以用来表示Money?","slug":"_73-在java中哪个数据类型可以用来表示money","link":"#_73-在java中哪个数据类型可以用来表示money","children":[]},{"level":3,"title":"74.JavaIO流的实现机制","slug":"_74-javaio流的实现机制","link":"#_74-javaio流的实现机制","children":[]},{"level":3,"title":"75.管理文件和目录的类","slug":"_75-管理文件和目录的类","link":"#_75-管理文件和目录的类","children":[]},{"level":3,"title":"76.JavaSoCket？","slug":"_76-javasocket","link":"#_76-javasocket","children":[]},{"level":3,"title":"77.内部类的分类及其特点","slug":"_77-内部类的分类及其特点","link":"#_77-内部类的分类及其特点","children":[]},{"level":3,"title":"1.说说 List, Set, Queue, Map 四者的区别？","slug":"_1-说说-list-set-queue-map-四者的区别","link":"#_1-说说-list-set-queue-map-四者的区别","children":[]},{"level":3,"title":"2.介绍一下集合框架底层数据结构？","slug":"_2-介绍一下集合框架底层数据结构","link":"#_2-介绍一下集合框架底层数据结构","children":[]},{"level":3,"title":"3.为什么要使用集合？","slug":"_3-为什么要使用集合","link":"#_3-为什么要使用集合","children":[]},{"level":3,"title":"4.ArrayList 和 Vector 的区别?","slug":"_4-arraylist-和-vector-的区别","link":"#_4-arraylist-和-vector-的区别","children":[]},{"level":3,"title":"5.ArrayList 与 LinkedList 区别?","slug":"_5-arraylist-与-linkedlist-区别","link":"#_5-arraylist-与-linkedlist-区别","children":[]},{"level":3,"title":"6.聊一聊ArrayList的扩容机制？","slug":"_6-聊一聊arraylist的扩容机制","link":"#_6-聊一聊arraylist的扩容机制","children":[]},{"level":3,"title":"7.comparable 和 Comparator 有什么区别？","slug":"_7-comparable-和-comparator-有什么区别","link":"#_7-comparable-和-comparator-有什么区别","children":[]},{"level":3,"title":"8.比较 HashSet、LinkedHashSet 和 TreeSet 三者的异同？","slug":"_8-比较-hashset、linkedhashset-和-treeset-三者的异同","link":"#_8-比较-hashset、linkedhashset-和-treeset-三者的异同","children":[]},{"level":3,"title":"9.Queue 与 Deque 的区别？","slug":"_9-queue-与-deque-的区别","link":"#_9-queue-与-deque-的区别","children":[]},{"level":3,"title":"10.ArrayDeque 与 LinkedList 的区别？","slug":"_10-arraydeque-与-linkedlist-的区别","link":"#_10-arraydeque-与-linkedlist-的区别","children":[]},{"level":3,"title":"11.说一说 PriorityQueue？","slug":"_11-说一说-priorityqueue","link":"#_11-说一说-priorityqueue","children":[]},{"level":3,"title":"12.HashMap 和 Hashtable 的区别？","slug":"_12-hashmap-和-hashtable-的区别","link":"#_12-hashmap-和-hashtable-的区别","children":[]},{"level":3,"title":"13.HashMap 和 HashSet 区别？","slug":"_13-hashmap-和-hashset-区别","link":"#_13-hashmap-和-hashset-区别","children":[]},{"level":3,"title":"14.HashMap 和 TreeMap 区别？","slug":"_14-hashmap-和-treemap-区别","link":"#_14-hashmap-和-treemap-区别","children":[]},{"level":3,"title":"15.说说HashMap 的底层实现？","slug":"_15-说说hashmap-的底层实现","link":"#_15-说说hashmap-的底层实现","children":[]},{"level":3,"title":"16.HashMap 的长度为什么是 2 的幂次方？","slug":"_16-hashmap-的长度为什么是-2-的幂次方","link":"#_16-hashmap-的长度为什么是-2-的幂次方","children":[]},{"level":3,"title":"17.ConcurrentHashMap 和 Hashtable 的区别?","slug":"_17-concurrenthashmap-和-hashtable-的区别","link":"#_17-concurrenthashmap-和-hashtable-的区别","children":[]},{"level":3,"title":"18.ConcurrentHashMap底层数据结构分析？","slug":"_18-concurrenthashmap底层数据结构分析","link":"#_18-concurrenthashmap底层数据结构分析","children":[]},{"level":3,"title":"19.谈谈ConcurrentHashMap的扩容机制？","slug":"_19-谈谈concurrenthashmap的扩容机制","link":"#_19-谈谈concurrenthashmap的扩容机制","children":[]},{"level":3,"title":"20.Jdk1.7到Jdk1.8 HashMap 发⽣了什么变化(底层)?","slug":"_20-jdk1-7到jdk1-8-hashmap-发生了什么变化-底层","link":"#_20-jdk1-7到jdk1-8-hashmap-发生了什么变化-底层","children":[]},{"level":3,"title":"21.说⼀下HashMap的Put⽅法","slug":"_21-说一下hashmap的put方法","link":"#_21-说一下hashmap的put方法","children":[]},{"level":3,"title":"22.HashMap的扩容机制原理","slug":"_22-hashmap的扩容机制原理","link":"#_22-hashmap的扩容机制原理","children":[]},{"level":3,"title":"23.CopyOnWriteArrayList的底层原理是怎样的","slug":"_23-copyonwritearraylist的底层原理是怎样的","link":"#_23-copyonwritearraylist的底层原理是怎样的","children":[]},{"level":3,"title":"24.fail-safe 机制与 fail-fast 机制分别有什 么作用?","slug":"_24-fail-safe-机制与-fail-fast-机制分别有什-么作用","link":"#_24-fail-safe-机制与-fail-fast-机制分别有什-么作用","children":[]},{"level":3,"title":"25.什么叫做阻塞队列的有界和无界","slug":"_25-什么叫做阻塞队列的有界和无界","link":"#_25-什么叫做阻塞队列的有界和无界","children":[]},{"level":3,"title":"26.ConcurrentHashMap 底层具体实现知 道吗？实现原理是什么？","slug":"_26-concurrenthashmap-底层具体实现知-道吗-实现原理是什么","link":"#_26-concurrenthashmap-底层具体实现知-道吗-实现原理是什么","children":[]},{"level":3,"title":"27.基于数组的阻塞队列 ArrayBlockingQueue 原理","slug":"_27-基于数组的阻塞队列-arrayblockingqueue-原理","link":"#_27-基于数组的阻塞队列-arrayblockingqueue-原理","children":[]},{"level":3,"title":"1.什么是线程和进程?","slug":"_1-什么是线程和进程","link":"#_1-什么是线程和进程","children":[]},{"level":3,"title":"2.请简要描述线程与进程的关系,区别及优缺点？","slug":"_2-请简要描述线程与进程的关系-区别及优缺点","link":"#_2-请简要描述线程与进程的关系-区别及优缺点","children":[]},{"level":3,"title":"3.程序计数器为什么是私有的?","slug":"_3-程序计数器为什么是私有的","link":"#_3-程序计数器为什么是私有的","children":[]},{"level":3,"title":"4.虚拟机栈和本地方法栈为什么是私有的?","slug":"_4-虚拟机栈和本地方法栈为什么是私有的","link":"#_4-虚拟机栈和本地方法栈为什么是私有的","children":[]},{"level":3,"title":"5.一句话简单介绍堆和方法区？","slug":"_5-一句话简单介绍堆和方法区","link":"#_5-一句话简单介绍堆和方法区","children":[]},{"level":3,"title":"6.说说并发与并行的区别?","slug":"_6-说说并发与并行的区别","link":"#_6-说说并发与并行的区别","children":[]},{"level":3,"title":"7.为什么要使用多线程呢?","slug":"_7-为什么要使用多线程呢","link":"#_7-为什么要使用多线程呢","children":[]},{"level":3,"title":"8.使用多线程可能带来什么问题?","slug":"_8-使用多线程可能带来什么问题","link":"#_8-使用多线程可能带来什么问题","children":[]},{"level":3,"title":"9.说说线程的生命周期和状态?","slug":"_9-说说线程的生命周期和状态","link":"#_9-说说线程的生命周期和状态","children":[]},{"level":3,"title":"10.什么是上下文切换?","slug":"_10-什么是上下文切换","link":"#_10-什么是上下文切换","children":[]},{"level":3,"title":"11.什么是线程死锁?如何避免死锁?","slug":"_11-什么是线程死锁-如何避免死锁","link":"#_11-什么是线程死锁-如何避免死锁","children":[]},{"level":3,"title":"12.说说 sleep() 方法和 wait() 方法区别和共同点?","slug":"_12-说说-sleep-方法和-wait-方法区别和共同点","link":"#_12-说说-sleep-方法和-wait-方法区别和共同点","children":[]},{"level":3,"title":"13.为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法？","slug":"_13-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法","link":"#_13-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法","children":[]},{"level":3,"title":"14.说一说自己对于 synchronized 关键字的了解?","slug":"_14-说一说自己对于-synchronized-关键字的了解","link":"#_14-说一说自己对于-synchronized-关键字的了解","children":[]},{"level":3,"title":"15.说说自己是怎么使用 synchronized 关键字?","slug":"_15-说说自己是怎么使用-synchronized-关键字","link":"#_15-说说自己是怎么使用-synchronized-关键字","children":[]},{"level":3,"title":"16.构造方法可以使用 synchronized 关键字修饰么？","slug":"_16-构造方法可以使用-synchronized-关键字修饰么","link":"#_16-构造方法可以使用-synchronized-关键字修饰么","children":[]},{"level":3,"title":"17.讲一下 synchronized 关键字的底层原理","slug":"_17-讲一下-synchronized-关键字的底层原理","link":"#_17-讲一下-synchronized-关键字的底层原理","children":[]},{"level":3,"title":"18.说说 JDK1.6 之后的 synchronized 关键字底层做了哪些优化，可以详细介绍一下这些优化吗？","slug":"_18-说说-jdk1-6-之后的-synchronized-关键字底层做了哪些优化-可以详细介绍一下这些优化吗","link":"#_18-说说-jdk1-6-之后的-synchronized-关键字底层做了哪些优化-可以详细介绍一下这些优化吗","children":[]},{"level":3,"title":"19.谈谈 synchronized 和 ReentrantLock 的区别？","slug":"_19-谈谈-synchronized-和-reentrantlock-的区别","link":"#_19-谈谈-synchronized-和-reentrantlock-的区别","children":[]},{"level":3,"title":"20.讲讲CPU 缓存模型？","slug":"_20-讲讲cpu-缓存模型","link":"#_20-讲讲cpu-缓存模型","children":[]},{"level":3,"title":"21.讲一下 JMM(Java 内存模型)？","slug":"_21-讲一下-jmm-java-内存模型","link":"#_21-讲一下-jmm-java-内存模型","children":[]},{"level":3,"title":"22.并发编程的三个重要特性？","slug":"_22-并发编程的三个重要特性","link":"#_22-并发编程的三个重要特性","children":[]},{"level":3,"title":"23.说说 synchronized 关键字和 volatile 关键字的区别？","slug":"_23-说说-synchronized-关键字和-volatile-关键字的区别","link":"#_23-说说-synchronized-关键字和-volatile-关键字的区别","children":[]},{"level":3,"title":"24.ThreadLocal 原理？","slug":"_24-threadlocal-原理","link":"#_24-threadlocal-原理","children":[]},{"level":3,"title":"25.为什么要用线程池？","slug":"_25-为什么要用线程池","link":"#_25-为什么要用线程池","children":[]},{"level":3,"title":"26.实现 Runnable 接口和 Callable 接口的区别？","slug":"_26-实现-runnable-接口和-callable-接口的区别","link":"#_26-实现-runnable-接口和-callable-接口的区别","children":[]},{"level":3,"title":"27.执行 execute()方法和 submit()方法的区别是什么呢？","slug":"_27-执行-execute-方法和-submit-方法的区别是什么呢","link":"#_27-执行-execute-方法和-submit-方法的区别是什么呢","children":[]},{"level":3,"title":"28.如何创建线程池？","slug":"_28-如何创建线程池","link":"#_28-如何创建线程池","children":[]},{"level":3,"title":"29.ThreadPoolExecutor构造函数重要参数分析？","slug":"_29-threadpoolexecutor构造函数重要参数分析","link":"#_29-threadpoolexecutor构造函数重要参数分析","children":[]},{"level":3,"title":"30.JUC 包中的原子类是哪 4 类?","slug":"_30-juc-包中的原子类是哪-4-类","link":"#_30-juc-包中的原子类是哪-4-类","children":[]},{"level":3,"title":"31.能不能给我简单介绍一下 AtomicInteger 类的原理？","slug":"_31-能不能给我简单介绍一下-atomicinteger-类的原理","link":"#_31-能不能给我简单介绍一下-atomicinteger-类的原理","children":[]},{"level":3,"title":"32.介绍一下AQS?","slug":"_32-介绍一下aqs","link":"#_32-介绍一下aqs","children":[]},{"level":3,"title":"33.shutdown()和shutdownNow()的区别？","slug":"_33-shutdown-和shutdownnow-的区别","link":"#_33-shutdown-和shutdownnow-的区别","children":[]},{"level":3,"title":"34.isTerminated()和isShutdown()的区别？","slug":"_34-isterminated-和isshutdown-的区别","link":"#_34-isterminated-和isshutdown-的区别","children":[]},{"level":3,"title":"35.说一下线程之间是如何通信的？","slug":"_35-说一下线程之间是如何通信的","link":"#_35-说一下线程之间是如何通信的","children":[]},{"level":3,"title":"36.CAS的原理以及缺点?","slug":"_36-cas的原理以及缺点","link":"#_36-cas的原理以及缺点","children":[]},{"level":3,"title":"37.引用类型有哪些？有什么区别？","slug":"_37-引用类型有哪些-有什么区别","link":"#_37-引用类型有哪些-有什么区别","children":[]},{"level":3,"title":"38.happen-before规则？","slug":"_38-happen-before规则","link":"#_38-happen-before规则","children":[]},{"level":3,"title":"39.线程的sleep、wait、join、yield如何使用？","slug":"_39-线程的sleep、wait、join、yield如何使用","link":"#_39-线程的sleep、wait、join、yield如何使用","children":[]},{"level":3,"title":"40.ThreadLocal的原理是什么，使用场景有哪些？","slug":"_40-threadlocal的原理是什么-使用场景有哪些","link":"#_40-threadlocal的原理是什么-使用场景有哪些","children":[]},{"level":3,"title":"41.ThreadLocal有哪些内存泄露问题，如何避免？","slug":"_41-threadlocal有哪些内存泄露问题-如何避免","link":"#_41-threadlocal有哪些内存泄露问题-如何避免","children":[]},{"level":3,"title":"42.volatile的可见性和禁止指令重排序怎么实现的？","slug":"_42-volatile的可见性和禁止指令重排序怎么实现的","link":"#_42-volatile的可见性和禁止指令重排序怎么实现的","children":[]},{"level":3,"title":"43.ConcurrentHashMap底层原理是什么？","slug":"_43-concurrenthashmap底层原理是什么","link":"#_43-concurrenthashmap底层原理是什么","children":[]},{"level":3,"title":"44.线程池中阻塞队列的作⽤？为什么是先添加队列⽽不是先创建最⼤线程？","slug":"_44-线程池中阻塞队列的作用-为什么是先添加队列而不是先创建最大线程","link":"#_44-线程池中阻塞队列的作用-为什么是先添加队列而不是先创建最大线程","children":[]},{"level":3,"title":"45.ReentrantLock中的公平锁和⾮公平锁的底层实现","slug":"_45-reentrantlock中的公平锁和非公平锁的底层实现","link":"#_45-reentrantlock中的公平锁和非公平锁的底层实现","children":[]},{"level":3,"title":"46.ReentrantLock中tryLock()和lock()⽅法的区别","slug":"_46-reentrantlock中trylock-和lock-方法的区别","link":"#_46-reentrantlock中trylock-和lock-方法的区别","children":[]},{"level":3,"title":"47.CountDownLatch和Semaphore的区别和底层原理","slug":"_47-countdownlatch和semaphore的区别和底层原理","link":"#_47-countdownlatch和semaphore的区别和底层原理","children":[]},{"level":3,"title":"48.线程池如何知道一个线程的任务已经执行完成","slug":"_48-线程池如何知道一个线程的任务已经执行完成","link":"#_48-线程池如何知道一个线程的任务已经执行完成","children":[]},{"level":3,"title":"49.wait 和 notify 这个为什么要在 synchronized 代码块中？","slug":"_49-wait-和-notify-这个为什么要在-synchronized-代码块中","link":"#_49-wait-和-notify-这个为什么要在-synchronized-代码块中","children":[]},{"level":3,"title":"50.Java中interrupted 和 isInterruptedd方法的区别？","slug":"_50-java中interrupted-和-isinterruptedd方法的区别","link":"#_50-java中interrupted-和-isinterruptedd方法的区别","children":[]},{"level":3,"title":"51.SynchronizedMap和ConcurrentHashMap有什么区别？","slug":"_51-synchronizedmap和concurrenthashmap有什么区别","link":"#_51-synchronizedmap和concurrenthashmap有什么区别","children":[]},{"level":3,"title":"52.线程池核心线程数怎么设置呢？","slug":"_52-线程池核心线程数怎么设置呢","link":"#_52-线程池核心线程数怎么设置呢","children":[]},{"level":3,"title":"53.Java线程池中队列常用类型有哪些？","slug":"_53-java线程池中队列常用类型有哪些","link":"#_53-java线程池中队列常用类型有哪些","children":[]},{"level":3,"title":"54.说说CyclicBarrier和CountDownLatch的区别？","slug":"_54-说说cyclicbarrier和countdownlatch的区别","link":"#_54-说说cyclicbarrier和countdownlatch的区别","children":[]},{"level":3,"title":"55.线程类的构造⽅法、静态块是被哪个线程调⽤的?","slug":"_55-线程类的构造方法、静态块是被哪个线程调用的","link":"#_55-线程类的构造方法、静态块是被哪个线程调用的","children":[]},{"level":3,"title":"56.死锁与活锁的区别，死锁与锁饥饿的区别？","slug":"_56-死锁与活锁的区别-死锁与锁饥饿的区别","link":"#_56-死锁与活锁的区别-死锁与锁饥饿的区别","children":[]},{"level":3,"title":"57.volatile实现可见性的原理","slug":"_57-volatile实现可见性的原理","link":"#_57-volatile实现可见性的原理","children":[]},{"level":3,"title":"58.是否可以把一个数组修饰为volatile?","slug":"_58-是否可以把一个数组修饰为volatile","link":"#_58-是否可以把一个数组修饰为volatile","children":[]},{"level":3,"title":"59.线上CPU飙高","slug":"_59-线上cpu飙高","link":"#_59-线上cpu飙高","children":[]},{"level":3,"title":"1.介绍下 Java 内存区域（运行时数据区）?","slug":"_1-介绍下-java-内存区域-运行时数据区","link":"#_1-介绍下-java-内存区域-运行时数据区","children":[]},{"level":3,"title":"2.程序计数器？","slug":"_2-程序计数器","link":"#_2-程序计数器","children":[]},{"level":3,"title":"3.Java 虚拟机栈？","slug":"_3-java-虚拟机栈","link":"#_3-java-虚拟机栈","children":[]},{"level":3,"title":"4.本地方法栈？","slug":"_4-本地方法栈","link":"#_4-本地方法栈","children":[]},{"level":3,"title":"5.堆？","slug":"_5-堆","link":"#_5-堆","children":[]},{"level":3,"title":"6.方法区？","slug":"_6-方法区","link":"#_6-方法区","children":[]},{"level":3,"title":"7.运行时常量池？","slug":"_7-运行时常量池","link":"#_7-运行时常量池","children":[]},{"level":3,"title":"8.字符串常量池？","slug":"_8-字符串常量池","link":"#_8-字符串常量池","children":[]},{"level":3,"title":"9.直接内存？","slug":"_9-直接内存","link":"#_9-直接内存","children":[]},{"level":3,"title":"10.Java 对象的创建过程？","slug":"_10-java-对象的创建过程","link":"#_10-java-对象的创建过程","children":[]},{"level":3,"title":"11.对象的内存布局？","slug":"_11-对象的内存布局","link":"#_11-对象的内存布局","children":[]},{"level":3,"title":"12.对象的访问定位？","slug":"_12-对象的访问定位","link":"#_12-对象的访问定位","children":[]},{"level":3,"title":"13.内存分配原则?","slug":"_13-内存分配原则","link":"#_13-内存分配原则","children":[]},{"level":3,"title":"14.主要进行 gc 的区域？","slug":"_14-主要进行-gc-的区域","link":"#_14-主要进行-gc-的区域","children":[]},{"level":3,"title":"15.空间分配担保？","slug":"_15-空间分配担保","link":"#_15-空间分配担保","children":[]},{"level":3,"title":"16.死亡对象判断方法？","slug":"_16-死亡对象判断方法","link":"#_16-死亡对象判断方法","children":[]},{"level":3,"title":"17.引用类型总结？","slug":"_17-引用类型总结","link":"#_17-引用类型总结","children":[]},{"level":3,"title":"18.如何判断一个常量是废弃常量？","slug":"_18-如何判断一个常量是废弃常量","link":"#_18-如何判断一个常量是废弃常量","children":[]},{"level":3,"title":"19.如何判断一个类是无用的类？","slug":"_19-如何判断一个类是无用的类","link":"#_19-如何判断一个类是无用的类","children":[]},{"level":3,"title":"20.垃圾收集算法？","slug":"_20-垃圾收集算法","link":"#_20-垃圾收集算法","children":[]},{"level":3,"title":"21.垃圾收集器？","slug":"_21-垃圾收集器","link":"#_21-垃圾收集器","children":[]},{"level":3,"title":"22.类加载过程？","slug":"_22-类加载过程","link":"#_22-类加载过程","children":[]},{"level":3,"title":"23.类加载器总结？","slug":"_23-类加载器总结","link":"#_23-类加载器总结","children":[]},{"level":3,"title":"24.双亲委派模型介绍？","slug":"_24-双亲委派模型介绍","link":"#_24-双亲委派模型介绍","children":[]},{"level":3,"title":"25.双亲委派模型的好处？","slug":"_25-双亲委派模型的好处","link":"#_25-双亲委派模型的好处","children":[]},{"level":3,"title":"26.如果我们不想用双亲委派模型怎么办","slug":"_26-如果我们不想用双亲委派模型怎么办","link":"#_26-如果我们不想用双亲委派模型怎么办","children":[]},{"level":3,"title":"27.什么是字节码？","slug":"_27-什么是字节码","link":"#_27-什么是字节码","children":[]},{"level":3,"title":"28.⼀个对象从加载到JVM，再到被GC清除，都经历了什么过程？","slug":"_28-一个对象从加载到jvm-再到被gc清除-都经历了什么过程","link":"#_28-一个对象从加载到jvm-再到被gc清除-都经历了什么过程","children":[]},{"level":3,"title":"29.什么是三⾊标记？","slug":"_29-什么是三色标记","link":"#_29-什么是三色标记","children":[]},{"level":3,"title":"1.一条 SQL 语句在 MySQL 内部是如何执行的?","slug":"_1-一条-sql-语句在-mysql-内部是如何执行的","link":"#_1-一条-sql-语句在-mysql-内部是如何执行的","children":[]},{"level":3,"title":"2.MySQL 支持哪些存储引擎？默认使用哪个？","slug":"_2-mysql-支持哪些存储引擎-默认使用哪个","link":"#_2-mysql-支持哪些存储引擎-默认使用哪个","children":[]},{"level":3,"title":"3.MySQL 存储引擎架构了解吗？","slug":"_3-mysql-存储引擎架构了解吗","link":"#_3-mysql-存储引擎架构了解吗","children":[]},{"level":3,"title":"4.MyISAM 和 InnoDB 的区别是什么？","slug":"_4-myisam-和-innodb-的区别是什么","link":"#_4-myisam-和-innodb-的区别是什么","children":[]},{"level":3,"title":"5.MySQL 查询缓存?","slug":"_5-mysql-查询缓存","link":"#_5-mysql-查询缓存","children":[]},{"level":3,"title":"6.何谓数据库事务？","slug":"_6-何谓数据库事务","link":"#_6-何谓数据库事务","children":[]},{"level":3,"title":"7.并发事务带来了哪些问题?","slug":"_7-并发事务带来了哪些问题","link":"#_7-并发事务带来了哪些问题","children":[]},{"level":3,"title":"8.不可重复读和幻读有什么区别呢？","slug":"_8-不可重复读和幻读有什么区别呢","link":"#_8-不可重复读和幻读有什么区别呢","children":[]},{"level":3,"title":"9.SQL 标准定义了哪些事务隔离级别?","slug":"_9-sql-标准定义了哪些事务隔离级别","link":"#_9-sql-标准定义了哪些事务隔离级别","children":[]},{"level":3,"title":"10.MySQL 的隔离级别是基于锁实现的吗?","slug":"_10-mysql-的隔离级别是基于锁实现的吗","link":"#_10-mysql-的隔离级别是基于锁实现的吗","children":[]},{"level":3,"title":"11.MySQL 的默认隔离级别是什么?","slug":"_11-mysql-的默认隔离级别是什么","link":"#_11-mysql-的默认隔离级别是什么","children":[]},{"level":3,"title":"12.表级锁和行级锁了解吗？有什么区别？","slug":"_12-表级锁和行级锁了解吗-有什么区别","link":"#_12-表级锁和行级锁了解吗-有什么区别","children":[]},{"level":3,"title":"13.共享锁和排他锁呢？","slug":"_13-共享锁和排他锁呢","link":"#_13-共享锁和排他锁呢","children":[]},{"level":3,"title":"14.InnoDB 有哪几类行锁？","slug":"_14-innodb-有哪几类行锁","link":"#_14-innodb-有哪几类行锁","children":[]},{"level":3,"title":"15.何为索引？有什么作用？","slug":"_15-何为索引-有什么作用","link":"#_15-何为索引-有什么作用","children":[]},{"level":3,"title":"16.索引的优缺点?","slug":"_16-索引的优缺点","link":"#_16-索引的优缺点","children":[]},{"level":3,"title":"17.为什么MySQL 没有使用Hash作为索引的数据结构呢？","slug":"_17-为什么mysql-没有使用hash作为索引的数据结构呢","link":"#_17-为什么mysql-没有使用hash作为索引的数据结构呢","children":[]},{"level":3,"title":"18.B 树& B+树?","slug":"_18-b-树-b-树","link":"#_18-b-树-b-树","children":[]},{"level":3,"title":"19.B 树& B+树两者有何异同呢？","slug":"_19-b-树-b-树两者有何异同呢","link":"#_19-b-树-b-树两者有何异同呢","children":[]},{"level":3,"title":"20.索引类型?","slug":"_20-索引类型","link":"#_20-索引类型","children":[]},{"level":3,"title":"21.聚集索引与非聚集索引以及优缺点?","slug":"_21-聚集索引与非聚集索引以及优缺点","link":"#_21-聚集索引与非聚集索引以及优缺点","children":[]},{"level":3,"title":"22.非聚集索引一定回表查询吗(覆盖索引)?","slug":"_22-非聚集索引一定回表查询吗-覆盖索引","link":"#_22-非聚集索引一定回表查询吗-覆盖索引","children":[]},{"level":3,"title":"23.覆盖索引？","slug":"_23-覆盖索引","link":"#_23-覆盖索引","children":[]},{"level":3,"title":"24.联合索引？","slug":"_24-联合索引","link":"#_24-联合索引","children":[]},{"level":3,"title":"25.最左前缀匹配原则","slug":"_25-最左前缀匹配原则","link":"#_25-最左前缀匹配原则","children":[]},{"level":3,"title":"26.创建索引的注意事项？","slug":"_26-创建索引的注意事项","link":"#_26-创建索引的注意事项","children":[]},{"level":3,"title":"27.使用索引的一些建议？","slug":"_27-使用索引的一些建议","link":"#_27-使用索引的一些建议","children":[]},{"level":3,"title":"28.redo log是什么？Mysql为什么不丢数据","slug":"_28-redo-log是什么-mysql为什么不丢数据","link":"#_28-redo-log是什么-mysql为什么不丢数据","children":[]},{"level":3,"title":"29.redo log刷盘时机？Mysql为什么不丢数据","slug":"_29-redo-log刷盘时机-mysql为什么不丢数据","link":"#_29-redo-log刷盘时机-mysql为什么不丢数据","children":[]},{"level":3,"title":"30.为什么不直接刷盘修改后的数据，而是刷盘redo log?Mysql为什么不丢数据","slug":"_30-为什么不直接刷盘修改后的数据-而是刷盘redo-log-mysql为什么不丢数据","link":"#_30-为什么不直接刷盘修改后的数据-而是刷盘redo-log-mysql为什么不丢数据","children":[]},{"level":3,"title":"31.什么是binlog？Mysql为什么不丢数据","slug":"_31-什么是binlog-mysql为什么不丢数据","link":"#_31-什么是binlog-mysql为什么不丢数据","children":[]},{"level":3,"title":"32.binlog记录格式？Mysql为什么不丢数据","slug":"_32-binlog记录格式-mysql为什么不丢数据","link":"#_32-binlog记录格式-mysql为什么不丢数据","children":[]},{"level":3,"title":"33.binlog的写入机制？Mysql为什么不丢数据","slug":"_33-binlog的写入机制-mysql为什么不丢数据","link":"#_33-binlog的写入机制-mysql为什么不丢数据","children":[]},{"level":3,"title":"34.undo log？Mysql为什么不丢数据","slug":"_34-undo-log-mysql为什么不丢数据","link":"#_34-undo-log-mysql为什么不丢数据","children":[]},{"level":3,"title":"35.mysql的事务隔离级别有哪几种？默认的是哪一种？","slug":"_35-mysql的事务隔离级别有哪几种-默认的是哪一种","link":"#_35-mysql的事务隔离级别有哪几种-默认的是哪一种","children":[]},{"level":3,"title":"36.解决幻读的方法？","slug":"_36-解决幻读的方法","link":"#_36-解决幻读的方法","children":[]},{"level":3,"title":"37.一致性非锁定读和锁定读?","slug":"_37-一致性非锁定读和锁定读","link":"#_37-一致性非锁定读和锁定读","children":[]},{"level":3,"title":"38.sql注入问题？","slug":"_38-sql注入问题","link":"#_38-sql注入问题","children":[]},{"level":3,"title":"39.什么是3NF（范式）?","slug":"_39-什么是3nf-范式","link":"#_39-什么是3nf-范式","children":[]},{"level":3,"title":"40.NULL和空串判断?","slug":"_40-null和空串判断","link":"#_40-null和空串判断","children":[]},{"level":3,"title":"41.like走索引吗?","slug":"_41-like走索引吗","link":"#_41-like走索引吗","children":[]},{"level":3,"title":"42.主键和唯一索引区别？","slug":"_42-主键和唯一索引区别","link":"#_42-主键和唯一索引区别","children":[]},{"level":3,"title":"43.索引不生效的情况？","slug":"_43-索引不生效的情况","link":"#_43-索引不生效的情况","children":[]},{"level":3,"title":"44.MVVC？","slug":"_44-mvvc","link":"#_44-mvvc","children":[]},{"level":3,"title":"45.varchar(10)和int(10)代表什么含义？","slug":"_45-varchar-10-和int-10-代表什么含义","link":"#_45-varchar-10-和int-10-代表什么含义","children":[]},{"level":3,"title":"46.count(*)在不同引擎的实现方式?","slug":"_46-count-在不同引擎的实现方式","link":"#_46-count-在不同引擎的实现方式","children":[]},{"level":3,"title":"47.锁的类型有哪些呢？","slug":"_47-锁的类型有哪些呢","link":"#_47-锁的类型有哪些呢","children":[]},{"level":3,"title":"48.那 ACID 靠什么保证的呢？","slug":"_48-那-acid-靠什么保证的呢","link":"#_48-那-acid-靠什么保证的呢","children":[]},{"level":3,"title":"49.说说 mysql 主从同步怎么做的吧？","slug":"_49-说说-mysql-主从同步怎么做的吧","link":"#_49-说说-mysql-主从同步怎么做的吧","children":[]},{"level":3,"title":"50.解释MySQL外连接、内连接与自连接的区别？","slug":"_50-解释mysql外连接、内连接与自连接的区别","link":"#_50-解释mysql外连接、内连接与自连接的区别","children":[]},{"level":3,"title":"51.SQL语言包括哪几部分？每部分都有哪些操作关键字？","slug":"_51-sql语言包括哪几部分-每部分都有哪些操作关键字","link":"#_51-sql语言包括哪几部分-每部分都有哪些操作关键字","children":[]},{"level":3,"title":"52.数据库的三范式是什么？","slug":"_52-数据库的三范式是什么","link":"#_52-数据库的三范式是什么","children":[]},{"level":3,"title":"53.SQL优化手段有哪些？","slug":"_53-sql优化手段有哪些","link":"#_53-sql优化手段有哪些","children":[]},{"level":3,"title":"54.简单说一说drop、delete与truncate的区别？","slug":"_54-简单说一说drop、delete与truncate的区别","link":"#_54-简单说一说drop、delete与truncate的区别","children":[]},{"level":3,"title":"55.大表如何优化？","slug":"_55-大表如何优化","link":"#_55-大表如何优化","children":[]},{"level":3,"title":"56.为什么 SELECT COUNT() FROM table 在 InnoDB 比 MyISAM 慢？","slug":"_56-为什么-select-count-from-table-在-innodb-比-myisam-慢","link":"#_56-为什么-select-count-from-table-在-innodb-比-myisam-慢","children":[]},{"level":3,"title":"57.主键与索引有什么区别？","slug":"_57-主键与索引有什么区别","link":"#_57-主键与索引有什么区别","children":[]},{"level":3,"title":"58.可以使用多少列创建索引？","slug":"_58-可以使用多少列创建索引","link":"#_58-可以使用多少列创建索引","children":[]},{"level":3,"title":"59.mysql锁的类型有哪些？","slug":"_59-mysql锁的类型有哪些","link":"#_59-mysql锁的类型有哪些","children":[]},{"level":3,"title":"60.怎么处理MySQL的慢查询？","slug":"_60-怎么处理mysql的慢查询","link":"#_60-怎么处理mysql的慢查询","children":[]},{"level":3,"title":"61.什么是mysql的主从复制？","slug":"_61-什么是mysql的主从复制","link":"#_61-什么是mysql的主从复制","children":[]},{"level":3,"title":"62.mysql为什么需要主从同步？","slug":"_62-mysql为什么需要主从同步","link":"#_62-mysql为什么需要主从同步","children":[]},{"level":3,"title":"63.Innodb是如何实现事务的","slug":"_63-innodb是如何实现事务的","link":"#_63-innodb是如何实现事务的","children":[]},{"level":3,"title":"64.b 树和 b+树的理解","slug":"_64-b-树和-b-树的理解","link":"#_64-b-树和-b-树的理解","children":[]},{"level":3,"title":"65.for update的作用和用法？","slug":"_65-for-update的作用和用法","link":"#_65-for-update的作用和用法","children":[]},{"level":3,"title":"66.如何保证 REPEATABLE READ 级别绝对不产⽣幻读？","slug":"_66-如何保证-repeatable-read-级别绝对不产生幻读","link":"#_66-如何保证-repeatable-read-级别绝对不产生幻读","children":[]},{"level":3,"title":"67.mysql的update的加锁情况","slug":"_67-mysql的update的加锁情况","link":"#_67-mysql的update的加锁情况","children":[]},{"level":3,"title":"68.MySQL的数据存在磁盘上到底长什么样","slug":"_68-mysql的数据存在磁盘上到底长什么样","link":"#_68-mysql的数据存在磁盘上到底长什么样","children":[]},{"level":3,"title":"69.为什么用了索引，SQL查询还是慢？","slug":"_69-为什么用了索引-sql查询还是慢","link":"#_69-为什么用了索引-sql查询还是慢","children":[]},{"level":3,"title":"70.什么是三星索引？","slug":"_70-什么是三星索引","link":"#_70-什么是三星索引","children":[]},{"level":3,"title":"71.count(1)和count(*) 哪个效率高？","slug":"_71-count-1-和count-哪个效率高","link":"#_71-count-1-和count-哪个效率高","children":[]},{"level":3,"title":"72.《阿里巴巴JAVA开发手册》里面写超过三张表禁止join 这是为什么？这样的话那sql要怎么写？","slug":"_72-《阿里巴巴java开发手册》里面写超过三张表禁止join-这是为什么-这样的话那sql要怎么写","link":"#_72-《阿里巴巴java开发手册》里面写超过三张表禁止join-这是为什么-这样的话那sql要怎么写","children":[]},{"level":3,"title":"73.什么是mysql的索引下推","slug":"_73-什么是mysql的索引下推","link":"#_73-什么是mysql的索引下推","children":[]},{"level":3,"title":"74.mysql为什么不丢数据(mysql七种日志)","slug":"_74-mysql为什么不丢数据-mysql七种日志","link":"#_74-mysql为什么不丢数据-mysql七种日志","children":[]},{"level":3,"title":"75.百亿级数据分表后怎么分页查呢？","slug":"_75-百亿级数据分表后怎么分页查呢","link":"#_75-百亿级数据分表后怎么分页查呢","children":[]},{"level":3,"title":"76.为什么一条sql执行会慢？","slug":"_76-为什么一条sql执行会慢","link":"#_76-为什么一条sql执行会慢","children":[]},{"level":3,"title":"77.mysql中的锁","slug":"_77-mysql中的锁","link":"#_77-mysql中的锁","children":[]},{"level":3,"title":"1.简单介绍一下 Redis?","slug":"_1-简单介绍一下-redis","link":"#_1-简单介绍一下-redis","children":[]},{"level":3,"title":"2.Redis 可以做消息队列么？","slug":"_2-redis-可以做消息队列么","link":"#_2-redis-可以做消息队列么","children":[]},{"level":3,"title":"3.Redis 单线程模型了解吗？","slug":"_3-redis-单线程模型了解吗","link":"#_3-redis-单线程模型了解吗","children":[]},{"level":3,"title":"4.Redis6.0 之前为什么不使用多线程？","slug":"_4-redis6-0-之前为什么不使用多线程","link":"#_4-redis6-0-之前为什么不使用多线程","children":[]},{"level":3,"title":"5.Redis6.0 之后为何引入了多线程？","slug":"_5-redis6-0-之后为何引入了多线程","link":"#_5-redis6-0-之后为何引入了多线程","children":[]},{"level":3,"title":"6.Redis 是如何判断数据是否过期的呢？","slug":"_6-redis-是如何判断数据是否过期的呢","link":"#_6-redis-是如何判断数据是否过期的呢","children":[]},{"level":3,"title":"7.过期的数据的删除策略了解么？","slug":"_7-过期的数据的删除策略了解么","link":"#_7-过期的数据的删除策略了解么","children":[]},{"level":3,"title":"8.Redis 内存淘汰机制了解么？","slug":"_8-redis-内存淘汰机制了解么","link":"#_8-redis-内存淘汰机制了解么","children":[]},{"level":3,"title":"9.怎么保证 Redis 挂掉之后再重启数据可以进行恢复？","slug":"_9-怎么保证-redis-挂掉之后再重启数据可以进行恢复","link":"#_9-怎么保证-redis-挂掉之后再重启数据可以进行恢复","children":[]},{"level":3,"title":"10.什么是 RDB 持久化？","slug":"_10-什么是-rdb-持久化","link":"#_10-什么是-rdb-持久化","children":[]},{"level":3,"title":"11.什么是 AOF 持久化？","slug":"_11-什么是-aof-持久化","link":"#_11-什么是-aof-持久化","children":[]},{"level":3,"title":"12.AOF 重写了解吗？","slug":"_12-aof-重写了解吗","link":"#_12-aof-重写了解吗","children":[]},{"level":3,"title":"13.Redis 4.0 对于持久化机制做了什么优化？","slug":"_13-redis-4-0-对于持久化机制做了什么优化","link":"#_13-redis-4-0-对于持久化机制做了什么优化","children":[]},{"level":3,"title":"14.如何使用 Redis 事务？","slug":"_14-如何使用-redis-事务","link":"#_14-如何使用-redis-事务","children":[]},{"level":3,"title":"15.Redis 支持原子性吗？","slug":"_15-redis-支持原子性吗","link":"#_15-redis-支持原子性吗","children":[]},{"level":3,"title":"16.如何解决 Redis 事务的缺陷？","slug":"_16-如何解决-redis-事务的缺陷","link":"#_16-如何解决-redis-事务的缺陷","children":[]},{"level":3,"title":"17.什么是 bigkey？","slug":"_17-什么是-bigkey","link":"#_17-什么是-bigkey","children":[]},{"level":3,"title":"18.bigkey 有什么危害？","slug":"_18-bigkey-有什么危害","link":"#_18-bigkey-有什么危害","children":[]},{"level":3,"title":"19.大量 key 集中过期问题？","slug":"_19-大量-key-集中过期问题","link":"#_19-大量-key-集中过期问题","children":[]},{"level":3,"title":"20.什么是缓存穿透？","slug":"_20-什么是缓存穿透","link":"#_20-什么是缓存穿透","children":[]},{"level":3,"title":"21.什么是缓存雪崩？","slug":"_21-什么是缓存雪崩","link":"#_21-什么是缓存雪崩","children":[]},{"level":3,"title":"22.3种常用的缓存读写策略？","slug":"_22-3种常用的缓存读写策略","link":"#_22-3种常用的缓存读写策略","children":[]},{"level":3,"title":"24.什么是内存碎片?","slug":"_24-什么是内存碎片","link":"#_24-什么是内存碎片","children":[]},{"level":3,"title":"25.为什么会有 Redis 内存碎片?","slug":"_25-为什么会有-redis-内存碎片","link":"#_25-为什么会有-redis-内存碎片","children":[]},{"level":3,"title":"26.Redis的有几种数据类型？","slug":"_26-redis的有几种数据类型","link":"#_26-redis的有几种数据类型","children":[]},{"level":3,"title":"27.redis为什么快？单线程？","slug":"_27-redis为什么快-单线程","link":"#_27-redis为什么快-单线程","children":[]},{"level":3,"title":"28.redis默认分多少个数据库？","slug":"_28-redis默认分多少个数据库","link":"#_28-redis默认分多少个数据库","children":[]},{"level":3,"title":"29.redis持久化的几种方式？","slug":"_29-redis持久化的几种方式","link":"#_29-redis持久化的几种方式","children":[]},{"level":3,"title":"30.RDB的优点？","slug":"_30-rdb的优点","link":"#_30-rdb的优点","children":[]},{"level":3,"title":"31.RDB的缺点？","slug":"_31-rdb的缺点","link":"#_31-rdb的缺点","children":[]},{"level":3,"title":"32.AOF持久化？","slug":"_32-aof持久化","link":"#_32-aof持久化","children":[]},{"level":3,"title":"33.AOF工作流程？","slug":"_33-aof工作流程","link":"#_33-aof工作流程","children":[]},{"level":3,"title":"34.为什么AOF要先把命令追加到缓存区(aof_buf)中？","slug":"_34-为什么aof要先把命令追加到缓存区-aof-buf-中","link":"#_34-为什么aof要先把命令追加到缓存区-aof-buf-中","children":[]},{"level":3,"title":"35.AOF优点？","slug":"_35-aof优点","link":"#_35-aof优点","children":[]},{"level":3,"title":"36.AOF缺点？","slug":"_36-aof缺点","link":"#_36-aof缺点","children":[]},{"level":3,"title":"37.混合持久化？优缺点？","slug":"_37-混合持久化-优缺点","link":"#_37-混合持久化-优缺点","children":[]},{"level":3,"title":"38.Redis Cluster槽范围？","slug":"_38-redis-cluster槽范围","link":"#_38-redis-cluster槽范围","children":[]},{"level":3,"title":"39.什么是缓存预热？","slug":"_39-什么是缓存预热","link":"#_39-什么是缓存预热","children":[]},{"level":3,"title":"40.Redis 的同步机制了解是什么？","slug":"_40-redis-的同步机制了解是什么","link":"#_40-redis-的同步机制了解是什么","children":[]},{"level":3,"title":"41.怎么使用Redis实现消息队列？","slug":"_41-怎么使用redis实现消息队列","link":"#_41-怎么使用redis实现消息队列","children":[]},{"level":3,"title":"42.是否使用过Redis Cluster集群，集群的原理是什么？","slug":"_42-是否使用过redis-cluster集群-集群的原理是什么","link":"#_42-是否使用过redis-cluster集群-集群的原理是什么","children":[]},{"level":3,"title":"43.Redis 集群架构模式有哪几种？","slug":"_43-redis-集群架构模式有哪几种","link":"#_43-redis-集群架构模式有哪几种","children":[]},{"level":3,"title":"44.说说 Redis 哈希槽的概念？","slug":"_44-说说-redis-哈希槽的概念","link":"#_44-说说-redis-哈希槽的概念","children":[]},{"level":3,"title":"45.假如 Redis 里面有 1 亿个 key，其中有 10w 个 key 是以某 个固定的已知的前缀开头的，如果将它们全部找出来？","slug":"_45-假如-redis-里面有-1-亿个-key-其中有-10w-个-key-是以某-个固定的已知的前缀开头的-如果将它们全部找出来","link":"#_45-假如-redis-里面有-1-亿个-key-其中有-10w-个-key-是以某-个固定的已知的前缀开头的-如果将它们全部找出来","children":[]},{"level":3,"title":"46.Redis 主从复制的核⼼原理","slug":"_46-redis-主从复制的核心原理","link":"#_46-redis-主从复制的核心原理","children":[]},{"level":3,"title":"1.什么是 Spring 框架?","slug":"_1-什么是-spring-框架","link":"#_1-什么是-spring-框架","children":[]},{"level":3,"title":"2.列举一些重要的 Spring 模块？","slug":"_2-列举一些重要的-spring-模块","link":"#_2-列举一些重要的-spring-模块","children":[]},{"level":3,"title":"3.Spring,Spring MVC,Spring Boot 之间什么关系?","slug":"_3-spring-spring-mvc-spring-boot-之间什么关系","link":"#_3-spring-spring-mvc-spring-boot-之间什么关系","children":[]},{"level":3,"title":"4.谈谈自己对于 Spring IoC 的了解？","slug":"_4-谈谈自己对于-spring-ioc-的了解","link":"#_4-谈谈自己对于-spring-ioc-的了解","children":[]},{"level":3,"title":"5.谈谈自己对于 AOP 的了解？","slug":"_5-谈谈自己对于-aop-的了解","link":"#_5-谈谈自己对于-aop-的了解","children":[]},{"level":3,"title":"6.Spring AOP 和 AspectJ AOP 有什么区别？","slug":"_6-spring-aop-和-aspectj-aop-有什么区别","link":"#_6-spring-aop-和-aspectj-aop-有什么区别","children":[]},{"level":3,"title":"7.什么是 Spring Bean？","slug":"_7-什么是-spring-bean","link":"#_7-什么是-spring-bean","children":[]},{"level":3,"title":"8.将一个类声明为 Bean 的注解有哪些?","slug":"_8-将一个类声明为-bean-的注解有哪些","link":"#_8-将一个类声明为-bean-的注解有哪些","children":[]},{"level":3,"title":"9.@Component 和 @Bean 的区别是什么？","slug":"_9-component-和-bean-的区别是什么","link":"#_9-component-和-bean-的区别是什么","children":[]},{"level":3,"title":"10.注入 Bean 的注解有哪些？","slug":"_10-注入-bean-的注解有哪些","link":"#_10-注入-bean-的注解有哪些","children":[]},{"level":3,"title":"11.Bean 的作用域有哪些?","slug":"_11-bean-的作用域有哪些","link":"#_11-bean-的作用域有哪些","children":[]},{"level":3,"title":"12.单例 Bean 的线程安全问题了解吗？","slug":"_12-单例-bean-的线程安全问题了解吗","link":"#_12-单例-bean-的线程安全问题了解吗","children":[]},{"level":3,"title":"13.Bean 的生命周期了解么?","slug":"_13-bean-的生命周期了解么","link":"#_13-bean-的生命周期了解么","children":[]},{"level":3,"title":"14.说说自己对于 Spring MVC 了解?","slug":"_14-说说自己对于-spring-mvc-了解","link":"#_14-说说自己对于-spring-mvc-了解","children":[]},{"level":3,"title":"15.SpringMVC 工作原理了解吗?","slug":"_15-springmvc-工作原理了解吗","link":"#_15-springmvc-工作原理了解吗","children":[]},{"level":3,"title":"16.Spring 框架中用到了哪些设计模式？","slug":"_16-spring-框架中用到了哪些设计模式","link":"#_16-spring-框架中用到了哪些设计模式","children":[]},{"level":3,"title":"17.Spring 管理事务的方式有几种？","slug":"_17-spring-管理事务的方式有几种","link":"#_17-spring-管理事务的方式有几种","children":[]},{"level":3,"title":"18.Spring 事务中哪几种事务传播行为?","slug":"_18-spring-事务中哪几种事务传播行为","link":"#_18-spring-事务中哪几种事务传播行为","children":[]},{"level":3,"title":"19.Spring 事务中的隔离级别有哪几种?","slug":"_19-spring-事务中的隔离级别有哪几种","link":"#_19-spring-事务中的隔离级别有哪几种","children":[]},{"level":3,"title":"20.@Transactional(rollbackFor = Exception.class)注解了解吗？","slug":"_20-transactional-rollbackfor-exception-class-注解了解吗","link":"#_20-transactional-rollbackfor-exception-class-注解了解吗","children":[]},{"level":3,"title":"21.springboot的优缺点？","slug":"_21-springboot的优缺点","link":"#_21-springboot的优缺点","children":[]},{"level":3,"title":"22.简单介绍一下@SpringbootApplication注解？","slug":"_22-简单介绍一下-springbootapplication注解","link":"#_22-简单介绍一下-springbootapplication注解","children":[]},{"level":3,"title":"23.springboot自动装配原理？","slug":"_23-springboot自动装配原理","link":"#_23-springboot自动装配原理","children":[]},{"level":3,"title":"24.@Transactional 的使用注意事项总结？","slug":"_24-transactional-的使用注意事项总结","link":"#_24-transactional-的使用注意事项总结","children":[]},{"level":3,"title":"25.Spring 框架中用到了哪些设计模式？","slug":"_25-spring-框架中用到了哪些设计模式","link":"#_25-spring-框架中用到了哪些设计模式","children":[]},{"level":3,"title":"26.IOC注入哪几种方式？","slug":"_26-ioc注入哪几种方式","link":"#_26-ioc注入哪几种方式","children":[]},{"level":3,"title":"27.什么是AOP(面向切面编程)？","slug":"_27-什么是aop-面向切面编程","link":"#_27-什么是aop-面向切面编程","children":[]},{"level":3,"title":"28.切面有几种类型的通知？分别是？","slug":"_28-切面有几种类型的通知-分别是","link":"#_28-切面有几种类型的通知-分别是","children":[]},{"level":3,"title":"29.什么是连接点 （Join point)?","slug":"_29-什么是连接点-join-point","link":"#_29-什么是连接点-join-point","children":[]},{"level":3,"title":"30.什么是切点（Pointcut)?","slug":"_30-什么是切点-pointcut","link":"#_30-什么是切点-pointcut","children":[]},{"level":3,"title":"31.什么是切面(Aspect)?","slug":"_31-什么是切面-aspect","link":"#_31-什么是切面-aspect","children":[]},{"level":3,"title":"32.织入(Weaving)?","slug":"_32-织入-weaving","link":"#_32-织入-weaving","children":[]},{"level":3,"title":"33.在目标对象的生命周期里有多个点可以进行织入？","slug":"_33-在目标对象的生命周期里有多个点可以进行织入","link":"#_33-在目标对象的生命周期里有多个点可以进行织入","children":[]},{"level":3,"title":"34.AOP动态代理策略？","slug":"_34-aop动态代理策略","link":"#_34-aop动态代理策略","children":[]},{"level":3,"title":"35.SpringMVC的几个组件？","slug":"_35-springmvc的几个组件","link":"#_35-springmvc的几个组件","children":[]},{"level":3,"title":"36.BeanFactory 和 ApplicationContext区别？","slug":"_36-beanfactory-和-applicationcontext区别","link":"#_36-beanfactory-和-applicationcontext区别","children":[]},{"level":3,"title":"37.@Qualifier注解？","slug":"_37-qualifier注解","link":"#_37-qualifier注解","children":[]},{"level":3,"title":"38.application.properties和application.yml文件可放位置?优先级?","slug":"_38-application-properties和application-yml文件可放位置-优先级","link":"#_38-application-properties和application-yml文件可放位置-优先级","children":[]},{"level":3,"title":"39.bootstrap.yml 和application.yml?","slug":"_39-bootstrap-yml-和application-yml","link":"#_39-bootstrap-yml-和application-yml","children":[]},{"level":3,"title":"40.在Spring AOP 中，关注点和横切关注的区别是什么？","slug":"_40-在spring-aop-中-关注点和横切关注的区别是什么","link":"#_40-在spring-aop-中-关注点和横切关注的区别是什么","children":[]},{"level":3,"title":"41.Spring 是怎么解决循环依赖的？","slug":"_41-spring-是怎么解决循环依赖的","link":"#_41-spring-是怎么解决循环依赖的","children":[]},{"level":3,"title":"42.事务三要素是什么？","slug":"_42-事务三要素是什么","link":"#_42-事务三要素是什么","children":[]},{"level":3,"title":"43.事务注解的本质是什么？","slug":"_43-事务注解的本质是什么","link":"#_43-事务注解的本质是什么","children":[]},{"level":3,"title":"44.如何在Spring Boot启动的时候运行一些特定的代码？","slug":"_44-如何在spring-boot启动的时候运行一些特定的代码","link":"#_44-如何在spring-boot启动的时候运行一些特定的代码","children":[]},{"level":3,"title":"45.如何实现一个IOC容器?","slug":"_45-如何实现一个ioc容器","link":"#_45-如何实现一个ioc容器","children":[]},{"level":3,"title":"46.什么的是bean的自动装配","slug":"_46-什么的是bean的自动装配","link":"#_46-什么的是bean的自动装配","children":[]},{"level":3,"title":"47.springboot自动配置原理是什么？","slug":"_47-springboot自动配置原理是什么","link":"#_47-springboot自动配置原理是什么","children":[]},{"level":3,"title":"48.什么是嵌入式服务器，为什么使用嵌入式服务器？","slug":"_48-什么是嵌入式服务器-为什么使用嵌入式服务器","link":"#_48-什么是嵌入式服务器-为什么使用嵌入式服务器","children":[]},{"level":3,"title":"49.Spring中的事务是如何实现的","slug":"_49-spring中的事务是如何实现的","link":"#_49-spring中的事务是如何实现的","children":[]},{"level":3,"title":"50.Spring启动流程","slug":"_50-spring启动流程","link":"#_50-spring启动流程","children":[]},{"level":3,"title":"51.Spring Boot中配置⽂件的加载顺序是怎样的？","slug":"_51-spring-boot中配置文件的加载顺序是怎样的","link":"#_51-spring-boot中配置文件的加载顺序是怎样的","children":[]},{"level":3,"title":"52.延迟加载","slug":"_52-延迟加载","link":"#_52-延迟加载","children":[]},{"level":3,"title":"53.@RestController 和 @Controller 有什么区别？","slug":"_53-restcontroller-和-controller-有什么区别","link":"#_53-restcontroller-和-controller-有什么区别","children":[]},{"level":3,"title":"54.@RequestMapping 注解有什么用？","slug":"_54-requestmapping-注解有什么用","link":"#_54-requestmapping-注解有什么用","children":[]},{"level":3,"title":"55.@RequestMapping 和 @GetMapping 注解的不同之处在哪里？","slug":"_55-requestmapping-和-getmapping-注解的不同之处在哪里","link":"#_55-requestmapping-和-getmapping-注解的不同之处在哪里","children":[]},{"level":3,"title":"56.Spring 中有哪些方式可以把 Bean 注入 到 IOC 容器？","slug":"_56-spring-中有哪些方式可以把-bean-注入-到-ioc-容器","link":"#_56-spring-中有哪些方式可以把-bean-注入-到-ioc-容器","children":[]},{"level":3,"title":"57.Spring 中 BeanFactory 和 FactoryBean 的区别","slug":"_57-spring-中-beanfactory-和-factorybean-的区别","link":"#_57-spring-中-beanfactory-和-factorybean-的区别","children":[]},{"level":3,"title":"58.介绍下 Spring IoC 的工作流程","slug":"_58-介绍下-spring-ioc-的工作流程","link":"#_58-介绍下-spring-ioc-的工作流程","children":[]},{"level":3,"title":"59.过滤器、拦截器、AOP的区别","slug":"_59-过滤器、拦截器、aop的区别","link":"#_59-过滤器、拦截器、aop的区别","children":[]},{"level":3,"title":"60.什么情况下会导致@Async异步方法会失效？","slug":"_60-什么情况下会导致-async异步方法会失效","link":"#_60-什么情况下会导致-async异步方法会失效","children":[]},{"level":3,"title":"61.spring与springboot默认aop采用？","slug":"_61-spring与springboot默认aop采用","link":"#_61-spring与springboot默认aop采用","children":[]},{"level":3,"title":"62.介绍下Spring的初始化过程","slug":"_62-介绍下spring的初始化过程","link":"#_62-介绍下spring的初始化过程","children":[]},{"level":3,"title":"63.配置文件的加载解析","slug":"_63-配置文件的加载解析","link":"#_63-配置文件的加载解析","children":[]},{"level":3,"title":"64.介绍下Spring中常用的注解","slug":"_64-介绍下spring中常用的注解","link":"#_64-介绍下spring中常用的注解","children":[]},{"level":3,"title":"65.SpringBoot 的自动装配原理","slug":"_65-springboot-的自动装配原理","link":"#_65-springboot-的自动装配原理","children":[]},{"level":3,"title":"66.介绍下SpringBoot的启动流程","slug":"_66-介绍下springboot的启动流程","link":"#_66-介绍下springboot的启动流程","children":[]},{"level":3,"title":"67.Spring 只处理单例模式下得循环依赖?","slug":"_67-spring-只处理单例模式下得循环依赖","link":"#_67-spring-只处理单例模式下得循环依赖","children":[]},{"level":3,"title":"68.Last-Modified缓存机制？","slug":"_68-last-modified缓存机制","link":"#_68-last-modified缓存机制","children":[]},{"level":3,"title":"1.为什么要用消息队列？","slug":"_1-为什么要用消息队列","link":"#_1-为什么要用消息队列","children":[]},{"level":3,"title":"2.使用消息队列带来的一些问题？","slug":"_2-使用消息队列带来的一些问题","link":"#_2-使用消息队列带来的一些问题","children":[]},{"level":3,"title":"3.什么是JMS ？","slug":"_3-什么是jms","link":"#_3-什么是jms","children":[]},{"level":3,"title":"4.JMS 两种消息模型？","slug":"_4-jms-两种消息模型","link":"#_4-jms-两种消息模型","children":[]},{"level":3,"title":"5.JMS 五种不同的消息正文格式","slug":"_5-jms-五种不同的消息正文格式","link":"#_5-jms-五种不同的消息正文格式","children":[]},{"level":3,"title":"6.什么是AMQP？","slug":"_6-什么是amqp","link":"#_6-什么是amqp","children":[]},{"level":3,"title":"7.JMS vs AMQP","slug":"_7-jms-vs-amqp","link":"#_7-jms-vs-amqp","children":[]},{"level":3,"title":"8.什么是Producer、Consumer、Broker、Topic、Partition？","slug":"_8-什么是producer、consumer、broker、topic、partition","link":"#_8-什么是producer、consumer、broker、topic、partition","children":[]},{"level":3,"title":"9.Kafka 的多副本机制了解吗？带来了什么好处？","slug":"_9-kafka-的多副本机制了解吗-带来了什么好处","link":"#_9-kafka-的多副本机制了解吗-带来了什么好处","children":[]},{"level":3,"title":"10.Kafka 如何保证消息的消费顺序？","slug":"_10-kafka-如何保证消息的消费顺序","link":"#_10-kafka-如何保证消息的消费顺序","children":[]},{"level":3,"title":"11.Kafka 如何保证消息不丢失？","slug":"_11-kafka-如何保证消息不丢失","link":"#_11-kafka-如何保证消息不丢失","children":[]},{"level":3,"title":"12.Kafka 如何保证消息不重复消费？","slug":"_12-kafka-如何保证消息不重复消费","link":"#_12-kafka-如何保证消息不重复消费","children":[]},{"level":3,"title":"13.RabbitMQ 核心概念？","slug":"_13-rabbitmq-核心概念","link":"#_13-rabbitmq-核心概念","children":[]},{"level":3,"title":"14.RocketMq事务消息流程","slug":"_14-rocketmq事务消息流程","link":"#_14-rocketmq事务消息流程","children":[]},{"level":3,"title":"15.RabbitMQ如何确保消息发送和消息接收","slug":"_15-rabbitmq如何确保消息发送和消息接收","link":"#_15-rabbitmq如何确保消息发送和消息接收","children":[]},{"level":3,"title":"16.RabbitMQ死信队列、延时队列分别是什么","slug":"_16-rabbitmq死信队列、延时队列分别是什么","link":"#_16-rabbitmq死信队列、延时队列分别是什么","children":[]},{"level":3,"title":"17.简述kafka架构设计是什么样？","slug":"_17-简述kafka架构设计是什么样","link":"#_17-简述kafka架构设计是什么样","children":[]},{"level":3,"title":"18.Kafka消息丢失的场景有哪些","slug":"_18-kafka消息丢失的场景有哪些","link":"#_18-kafka消息丢失的场景有哪些","children":[]},{"level":3,"title":"19.kafka的ACK机制","slug":"_19-kafka的ack机制","link":"#_19-kafka的ack机制","children":[]},{"level":3,"title":"20.Offset机制","slug":"_20-offset机制","link":"#_20-offset机制","children":[]},{"level":3,"title":"21.Kafka是pull？push？以及优劣势分析","slug":"_21-kafka是pull-push-以及优劣势分析","link":"#_21-kafka是pull-push-以及优劣势分析","children":[]},{"level":3,"title":"22.kafka的rebalance机制是什么","slug":"_22-kafka的rebalance机制是什么","link":"#_22-kafka的rebalance机制是什么","children":[]},{"level":3,"title":"23.Kafka的消费者如何消费数据","slug":"_23-kafka的消费者如何消费数据","link":"#_23-kafka的消费者如何消费数据","children":[]},{"level":3,"title":"24.RocketMQ的实现原理","slug":"_24-rocketmq的实现原理","link":"#_24-rocketmq的实现原理","children":[]},{"level":3,"title":"25.RocketMQ为什么速度快","slug":"_25-rocketmq为什么速度快","link":"#_25-rocketmq为什么速度快","children":[]},{"level":3,"title":"26.消息队列如何保证消息可靠传输","slug":"_26-消息队列如何保证消息可靠传输","link":"#_26-消息队列如何保证消息可靠传输","children":[]},{"level":3,"title":"27.消息队列有哪些作⽤","slug":"_27-消息队列有哪些作用","link":"#_27-消息队列有哪些作用","children":[]},{"level":3,"title":"28.如何保证消息的⾼效读写？","slug":"_28-如何保证消息的高效读写","link":"#_28-如何保证消息的高效读写","children":[]},{"level":3,"title":"29.如何确保消息不丢失","slug":"_29-如何确保消息不丢失","link":"#_29-如何确保消息不丢失","children":[]},{"level":3,"title":"30.如何检测消息丢失","slug":"_30-如何检测消息丢失","link":"#_30-如何检测消息丢失","children":[]},{"level":3,"title":"31.MQ怎么解决重复消费的问题","slug":"_31-mq怎么解决重复消费的问题","link":"#_31-mq怎么解决重复消费的问题","children":[]},{"level":3,"title":"32.MQ消息积压怎么解决","slug":"_32-mq消息积压怎么解决","link":"#_32-mq消息积压怎么解决","children":[]},{"level":3,"title":"33.rocketMq如何保证顺序消费","slug":"_33-rocketmq如何保证顺序消费","link":"#_33-rocketmq如何保证顺序消费","children":[]},{"level":3,"title":"34.rocketMq如何保证消息不丢失","slug":"_34-rocketmq如何保证消息不丢失","link":"#_34-rocketmq如何保证消息不丢失","children":[]},{"level":3,"title":"35.partition的数据文件（offffset，MessageSize，data）","slug":"_35-partition的数据文件-offffset-messagesize-data","link":"#_35-partition的数据文件-offffset-messagesize-data","children":[]},{"level":3,"title":"36.Kafka 中的ISR(InSyncRepli)、OSR(OutSyncRepli)、AR(AllRepli)代表什么？","slug":"_36-kafka-中的isr-insyncrepli-、osr-outsyncrepli-、ar-allrepli-代表什么","link":"#_36-kafka-中的isr-insyncrepli-、osr-outsyncrepli-、ar-allrepli-代表什么","children":[]},{"level":3,"title":"37.Kafka的那些设计让它有如此高的性能?","slug":"_37-kafka的那些设计让它有如此高的性能","link":"#_37-kafka的那些设计让它有如此高的性能","children":[]},{"level":3,"title":"38.rocketMq如何保证高可用","slug":"_38-rocketmq如何保证高可用","link":"#_38-rocketmq如何保证高可用","children":[]},{"level":3,"title":"39.RocketMq消费者消费模式有几种","slug":"_39-rocketmq消费者消费模式有几种","link":"#_39-rocketmq消费者消费模式有几种","children":[]},{"level":3,"title":"40.RocketMq延迟消息？如何实现的","slug":"_40-rocketmq延迟消息-如何实现的","link":"#_40-rocketmq延迟消息-如何实现的","children":[]},{"level":3,"title":"41.RocketMq是推模型还是拉模型","slug":"_41-rocketmq是推模型还是拉模型","link":"#_41-rocketmq是推模型还是拉模型","children":[]},{"level":3,"title":"42.kafka 的零拷贝原理?","slug":"_42-kafka-的零拷贝原理","link":"#_42-kafka-的零拷贝原理","children":[]},{"level":3,"title":"1. 为什需要websocket","slug":"_1-为什需要websocket","link":"#_1-为什需要websocket","children":[]},{"level":3,"title":"2.什么是websocket","slug":"_2-什么是websocket","link":"#_2-什么是websocket","children":[]},{"level":3,"title":"3.WebSocket如何从HTTP协议转化为WebSocket协议？","slug":"_3-websocket如何从http协议转化为websocket协议","link":"#_3-websocket如何从http协议转化为websocket协议","children":[]},{"level":3,"title":"4.WebSocket为什么依赖于HTTP连接","slug":"_4-websocket为什么依赖于http连接","link":"#_4-websocket为什么依赖于http连接","children":[]},{"level":3,"title":"5.如何保证消息一定送达给用户","slug":"_5-如何保证消息一定送达给用户","link":"#_5-如何保证消息一定送达给用户","children":[]},{"level":3,"title":"6.BIO 是什么？","slug":"_6-bio-是什么","link":"#_6-bio-是什么","children":[]},{"level":3,"title":"7.NIO 是什么？","slug":"_7-nio-是什么","link":"#_7-nio-是什么","children":[]},{"level":3,"title":"8.BIO、NIO 有什么区别？","slug":"_8-bio、nio-有什么区别","link":"#_8-bio、nio-有什么区别","children":[]},{"level":3,"title":"9.AIO 是什么？","slug":"_9-aio-是什么","link":"#_9-aio-是什么","children":[]},{"level":3,"title":"10.Direct Buffer 和 Non-Direct Buffer 的区别","slug":"_10-direct-buffer-和-non-direct-buffer-的区别","link":"#_10-direct-buffer-和-non-direct-buffer-的区别","children":[]},{"level":3,"title":"1.elasticsearch 的倒排索引是什么","slug":"_1-elasticsearch-的倒排索引是什么","link":"#_1-elasticsearch-的倒排索引是什么","children":[]},{"level":3,"title":"2.Elasticsearch 的 master 选举流程？","slug":"_2-elasticsearch-的-master-选举流程","link":"#_2-elasticsearch-的-master-选举流程","children":[]},{"level":3,"title":"3.为什么要使用 Elasticsearch?","slug":"_3-为什么要使用-elasticsearch","link":"#_3-为什么要使用-elasticsearch","children":[]},{"level":3,"title":"4.Elasticsearch 集群脑裂问题？","slug":"_4-elasticsearch-集群脑裂问题","link":"#_4-elasticsearch-集群脑裂问题","children":[]},{"level":3,"title":"5.Elasticsearch 索引文档的流程？","slug":"_5-elasticsearch-索引文档的流程","link":"#_5-elasticsearch-索引文档的流程","children":[]},{"level":3,"title":"6.Elasticsearch 更新和删除文档的流程？","slug":"_6-elasticsearch-更新和删除文档的流程","link":"#_6-elasticsearch-更新和删除文档的流程","children":[]},{"level":3,"title":"7.Elasticsearch 搜索的流程？","slug":"_7-elasticsearch-搜索的流程","link":"#_7-elasticsearch-搜索的流程","children":[]},{"level":3,"title":"8.在并发情况下，Elasticsearch 如果保证读写一致？","slug":"_8-在并发情况下-elasticsearch-如果保证读写一致","link":"#_8-在并发情况下-elasticsearch-如果保证读写一致","children":[]},{"level":3,"title":"9.Elasticsearch 中的集群、节点、索引、文档、类型是什么？","slug":"_9-elasticsearch-中的集群、节点、索引、文档、类型是什么","link":"#_9-elasticsearch-中的集群、节点、索引、文档、类型是什么","children":[]},{"level":3,"title":"10.说说分段存储的思想","slug":"_10-说说分段存储的思想","link":"#_10-说说分段存储的思想","children":[]},{"level":3,"title":"11.谈谈你对段合并的策略思想的认识","slug":"_11-谈谈你对段合并的策略思想的认识","link":"#_11-谈谈你对段合并的策略思想的认识","children":[]},{"level":3,"title":"12.熟悉ElasticSearch 性能优化？","slug":"_12-熟悉elasticsearch-性能优化","link":"#_12-熟悉elasticsearch-性能优化","children":[]},{"level":3,"title":"13.node一般设置几个分片？","slug":"_13-node一般设置几个分片","link":"#_13-node一般设置几个分片","children":[]},{"level":3,"title":"1.什么是MongoDB","slug":"_1-什么是mongodb","link":"#_1-什么是mongodb","children":[]},{"level":3,"title":"2.MongoDB的优势有哪些","slug":"_2-mongodb的优势有哪些","link":"#_2-mongodb的优势有哪些","children":[]},{"level":3,"title":"3.什么是集合(表)","slug":"_3-什么是集合-表","link":"#_3-什么是集合-表","children":[]},{"level":3,"title":"4.什么是文档(记录)","slug":"_4-什么是文档-记录","link":"#_4-什么是文档-记录","children":[]},{"level":3,"title":"5.什么是非关系型数据库","slug":"_5-什么是非关系型数据库","link":"#_5-什么是非关系型数据库","children":[]},{"level":3,"title":"6.为什么用MongoDB","slug":"_6-为什么用mongodb","link":"#_6-为什么用mongodb","children":[]},{"level":3,"title":"7.在哪些场景使用MongoDB","slug":"_7-在哪些场景使用mongodb","link":"#_7-在哪些场景使用mongodb","children":[]},{"level":3,"title":"8.MongoDB中的命名空间是什么意思?","slug":"_8-mongodb中的命名空间是什么意思","link":"#_8-mongodb中的命名空间是什么意思","children":[]},{"level":3,"title":"9.monogodb 中的分片什么意思","slug":"_9-monogodb-中的分片什么意思","link":"#_9-monogodb-中的分片什么意思","children":[]},{"level":3,"title":"10.为什么要在MongoDB中使用分析器","slug":"_10-为什么要在mongodb中使用分析器","link":"#_10-为什么要在mongodb中使用分析器","children":[]},{"level":3,"title":"11.MongoDB支持主键外键关系吗","slug":"_11-mongodb支持主键外键关系吗","link":"#_11-mongodb支持主键外键关系吗","children":[]},{"level":3,"title":"12.MongoDB支持哪些数据类型","slug":"_12-mongodb支持哪些数据类型","link":"#_12-mongodb支持哪些数据类型","children":[]},{"level":3,"title":"13.在MongoDB中什么是副本集","slug":"_13-在mongodb中什么是副本集","link":"#_13-在mongodb中什么是副本集","children":[]},{"level":3,"title":"1.何为 RPC?","slug":"_1-何为-rpc","link":"#_1-何为-rpc","children":[]},{"level":3,"title":"2.RPC 的原理是什么?","slug":"_2-rpc-的原理是什么","link":"#_2-rpc-的原理是什么","children":[]},{"level":3,"title":"3.有哪些常见的 RPC 框架？","slug":"_3-有哪些常见的-rpc-框架","link":"#_3-有哪些常见的-rpc-框架","children":[]},{"level":3,"title":"4.什么是 Dubbo?","slug":"_4-什么是-dubbo","link":"#_4-什么是-dubbo","children":[]},{"level":3,"title":"5.为什么要用 Dubbo?","slug":"_5-为什么要用-dubbo","link":"#_5-为什么要用-dubbo","children":[]},{"level":3,"title":"6.什么是分布式?","slug":"_6-什么是分布式","link":"#_6-什么是分布式","children":[]},{"level":3,"title":"7.Dubbo 架构中的核心角色有哪些？","slug":"_7-dubbo-架构中的核心角色有哪些","link":"#_7-dubbo-架构中的核心角色有哪些","children":[]},{"level":3,"title":"8.Dubbo 中的 Invoker 概念了解么？","slug":"_8-dubbo-中的-invoker-概念了解么","link":"#_8-dubbo-中的-invoker-概念了解么","children":[]},{"level":3,"title":"9.Dubbo 的工作原理了解么？","slug":"_9-dubbo-的工作原理了解么","link":"#_9-dubbo-的工作原理了解么","children":[]},{"level":3,"title":"10.Dubbo 的 SPI 机制了解么？ 如何扩展 Dubbo 中的默认实现？","slug":"_10-dubbo-的-spi-机制了解么-如何扩展-dubbo-中的默认实现","link":"#_10-dubbo-的-spi-机制了解么-如何扩展-dubbo-中的默认实现","children":[]},{"level":3,"title":"11.Dubbo 的微内核架构了解吗？","slug":"_11-dubbo-的微内核架构了解吗","link":"#_11-dubbo-的微内核架构了解吗","children":[]},{"level":3,"title":"12.Dubbo 提供的负载均衡策略有哪些？","slug":"_12-dubbo-提供的负载均衡策略有哪些","link":"#_12-dubbo-提供的负载均衡策略有哪些","children":[]},{"level":3,"title":"13.说一下Dubbo服务注册流程?","slug":"_13-说一下dubbo服务注册流程","link":"#_13-说一下dubbo服务注册流程","children":[]},{"level":3,"title":"14.怎么实现动态感知服务下线的呢？","slug":"_14-怎么实现动态感知服务下线的呢","link":"#_14-怎么实现动态感知服务下线的呢","children":[]},{"level":3,"title":"15.Dubbo 容错策略?","slug":"_15-dubbo-容错策略","link":"#_15-dubbo-容错策略","children":[]},{"level":3,"title":"16.Dubbo 框架源码最重要的设计原则是什么？","slug":"_16-dubbo-框架源码最重要的设计原则是什么","link":"#_16-dubbo-框架源码最重要的设计原则是什么","children":[]},{"level":3,"title":"17.Dubbo 官方给出了四大组件的概念，请谈一下你对它们的认识。","slug":"_17-dubbo-官方给出了四大组件的概念-请谈一下你对它们的认识。","link":"#_17-dubbo-官方给出了四大组件的概念-请谈一下你对它们的认识。","children":[]},{"level":3,"title":"18.什么是 SPI？请简单描述一下 SPI 要解决的问题。","slug":"_18-什么是-spi-请简单描述一下-spi-要解决的问题。","link":"#_18-什么是-spi-请简单描述一下-spi-要解决的问题。","children":[]},{"level":3,"title":"19.JDK 的 SPI 机制存在什么问题？","slug":"_19-jdk-的-spi-机制存在什么问题","link":"#_19-jdk-的-spi-机制存在什么问题","children":[]},{"level":3,"title":"20.Dubbo 框架的 Adaptive 类都有哪些？Adaptive 类与 Adaptive 方法的区别是什么？ 或者说，各自的应用场景有什么不同？","slug":"_20-dubbo-框架的-adaptive-类都有哪些-adaptive-类与-adaptive-方法的区别是什么-或者说-各自的应用场景有什么不同","link":"#_20-dubbo-框架的-adaptive-类都有哪些-adaptive-类与-adaptive-方法的区别是什么-或者说-各自的应用场景有什么不同","children":[]},{"level":3,"title":"21.简述 Dubbo 的 Wrapper 机制？","slug":"_21-简述-dubbo-的-wrapper-机制","link":"#_21-简述-dubbo-的-wrapper-机制","children":[]},{"level":3,"title":"22.Dubbo 的 Wrapper 类是否属于扩展类？","slug":"_22-dubbo-的-wrapper-类是否属于扩展类","link":"#_22-dubbo-的-wrapper-类是否属于扩展类","children":[]},{"level":3,"title":"23.简述 Dubbo 的 Active 机制？","slug":"_23-简述-dubbo-的-active-机制","link":"#_23-简述-dubbo-的-active-机制","children":[]},{"level":3,"title":"24.Dubbo 的 Activate 类是否属于扩展类？","slug":"_24-dubbo-的-activate-类是否属于扩展类","link":"#_24-dubbo-的-activate-类是否属于扩展类","children":[]},{"level":3,"title":"25.请对 Dubbo 的普通扩展类、Adaptive 类、Wrapper 类，及 Activate 类的实现方式、 个数，及是否属于扩展类等进行一个总结。","slug":"_25-请对-dubbo-的普通扩展类、adaptive-类、wrapper-类-及-activate-类的实现方式、-个数-及是否属于扩展类等进行一个总结。","link":"#_25-请对-dubbo-的普通扩展类、adaptive-类、wrapper-类-及-activate-类的实现方式、-个数-及是否属于扩展类等进行一个总结。","children":[]},{"level":3,"title":"26.简述 Dubbo 的 ExtensionLoader 实例的组成。","slug":"_26-简述-dubbo-的-extensionloader-实例的组成。","link":"#_26-简述-dubbo-的-extensionloader-实例的组成。","children":[]},{"level":3,"title":"27.Dubbo 在查找指定扩展类时，其会查找哪些目录中的扩展类配置文件？对于这些目录中的配置文件，其是查找了所有这些目录，在一个目录中找到了就不再找其它目录了？ 其是仅加载了这一个扩展类还是加载了全部该 SPI 的所有扩展类？","slug":"_27-dubbo-在查找指定扩展类时-其会查找哪些目录中的扩展类配置文件-对于这些目录中的配置文件-其是查找了所有这些目录-在一个目录中找到了就不再找其它目录了-其是仅加载了这一个扩展类还是加载了全部该-spi-的所有扩展类","link":"#_27-dubbo-在查找指定扩展类时-其会查找哪些目录中的扩展类配置文件-对于这些目录中的配置文件-其是查找了所有这些目录-在一个目录中找到了就不再找其它目录了-其是仅加载了这一个扩展类还是加载了全部该-spi-的所有扩展类","children":[]},{"level":3,"title":"28.Dubbo 源码中是如何判断一个类是否是 Wrapper 类的？","slug":"_28-dubbo-源码中是如何判断一个类是否是-wrapper-类的","link":"#_28-dubbo-源码中是如何判断一个类是否是-wrapper-类的","children":[]},{"level":3,"title":"29.从 Dubbo 源码中可以看出，一个 SPI 接口的实现类有什么要求？","slug":"_29-从-dubbo-源码中可以看出-一个-spi-接口的实现类有什么要求","link":"#_29-从-dubbo-源码中可以看出-一个-spi-接口的实现类有什么要求","children":[]},{"level":3,"title":"30.ExtensionLoader 实例中包含一个 ExtensionFactory 实例 objectFactory，该实例用于 创建指定扩展名的扩展类实例，简述 objectFactory 创建扩展类实例的过程。","slug":"_30-extensionloader-实例中包含一个-extensionfactory-实例-objectfactory-该实例用于-创建指定扩展名的扩展类实例-简述-objectfactory-创建扩展类实例的过程。","link":"#_30-extensionloader-实例中包含一个-extensionfactory-实例-objectfactory-该实例用于-创建指定扩展名的扩展类实例-简述-objectfactory-创建扩展类实例的过程。","children":[]},{"level":3,"title":"31.请简述一个指定功能性扩展名的扩展类实例的创建、setter 及 wrapper 的顺序与过 程？","slug":"_31-请简述一个指定功能性扩展名的扩展类实例的创建、setter-及-wrapper-的顺序与过-程","link":"#_31-请简述一个指定功能性扩展名的扩展类实例的创建、setter-及-wrapper-的顺序与过-程","children":[]},{"level":3,"title":"1.Seata AT模式原理流程","slug":"_1-seata-at模式原理流程","link":"#_1-seata-at模式原理流程","children":[]},{"level":3,"title":"1.什么是sentinel？","slug":"_1-什么是sentinel","link":"#_1-什么是sentinel","children":[]},{"level":3,"title":"2.sentinel和Hystrix有何区别？","slug":"_2-sentinel和hystrix有何区别","link":"#_2-sentinel和hystrix有何区别","children":[]},{"level":3,"title":"3.流量控制如何配置？","slug":"_3-流量控制如何配置","link":"#_3-流量控制如何配置","children":[]},{"level":3,"title":"4.三种流控效果","slug":"_4-三种流控效果","link":"#_4-三种流控效果","children":[]},{"level":3,"title":"5. 三种流控模式","slug":"_5-三种流控模式","link":"#_5-三种流控模式","children":[]},{"level":3,"title":"6.两种统计类型","slug":"_6-两种统计类型","link":"#_6-两种统计类型","children":[]},{"level":3,"title":"7.降级规则如何配置？","slug":"_7-降级规则如何配置","link":"#_7-降级规则如何配置","children":[]},{"level":3,"title":"8.三种熔断策略","slug":"_8-三种熔断策略","link":"#_8-三种熔断策略","children":[]},{"level":3,"title":"9.热点参数如何限流？","slug":"_9-热点参数如何限流","link":"#_9-热点参数如何限流","children":[]},{"level":3,"title":"10.系统自适应如何限流？","slug":"_10-系统自适应如何限流","link":"#_10-系统自适应如何限流","children":[]},{"level":3,"title":"1.Eureka Server 数据存储","slug":"_1-eureka-server-数据存储","link":"#_1-eureka-server-数据存储","children":[]},{"level":3,"title":"1.什么是CAP理论？","slug":"_1-什么是cap理论","link":"#_1-什么是cap理论","children":[]},{"level":3,"title":"2.什么是网络分区？","slug":"_2-什么是网络分区","link":"#_2-什么是网络分区","children":[]},{"level":3,"title":"3.不是所谓的“3 选 2”？","slug":"_3-不是所谓的-3-选-2","link":"#_3-不是所谓的-3-选-2","children":[]},{"level":3,"title":"4.BASE 理论？","slug":"_4-base-理论","link":"#_4-base-理论","children":[]},{"level":3,"title":"5.BASE 理论三要素？","slug":"_5-base-理论三要素","link":"#_5-base-理论三要素","children":[]},{"level":3,"title":"6.Paxos算法？","slug":"_6-paxos算法","link":"#_6-paxos算法","children":[]},{"level":3,"title":"6.分布式幂等性如何设计？","slug":"_6-分布式幂等性如何设计","link":"#_6-分布式幂等性如何设计","children":[]},{"level":3,"title":"7.简单一次完整的 HTTP 请求所经历的步骤？","slug":"_7-简单一次完整的-http-请求所经历的步骤","link":"#_7-简单一次完整的-http-请求所经历的步骤","children":[]},{"level":3,"title":"8.你知道哪些分布式事务解决方案？","slug":"_8-你知道哪些分布式事务解决方案","link":"#_8-你知道哪些分布式事务解决方案","children":[]},{"level":3,"title":"9.什么是二阶段提交？","slug":"_9-什么是二阶段提交","link":"#_9-什么是二阶段提交","children":[]},{"level":3,"title":"10.什么是三阶段提交？","slug":"_10-什么是三阶段提交","link":"#_10-什么是三阶段提交","children":[]},{"level":3,"title":"11.什么是补偿事务？","slug":"_11-什么是补偿事务","link":"#_11-什么是补偿事务","children":[]},{"level":3,"title":"12.消息队列是怎么实现事务的？","slug":"_12-消息队列是怎么实现事务的","link":"#_12-消息队列是怎么实现事务的","children":[]},{"level":3,"title":"13.你知道哪些限流算法？","slug":"_13-你知道哪些限流算法","link":"#_13-你知道哪些限流算法","children":[]},{"level":3,"title":"14.说说什么是计数器（固定窗口）算法？","slug":"_14-说说什么是计数器-固定窗口-算法","link":"#_14-说说什么是计数器-固定窗口-算法","children":[]},{"level":3,"title":"15.说说什么是滑动窗口算法？","slug":"_15-说说什么是滑动窗口算法","link":"#_15-说说什么是滑动窗口算法","children":[]},{"level":3,"title":"16.说说什么是漏桶算法？","slug":"_16-说说什么是漏桶算法","link":"#_16-说说什么是漏桶算法","children":[]},{"level":3,"title":"17.说说什么是令牌桶算法？","slug":"_17-说说什么是令牌桶算法","link":"#_17-说说什么是令牌桶算法","children":[]},{"level":3,"title":"18.分布式id生成方案有哪些？","slug":"_18-分布式id生成方案有哪些","link":"#_18-分布式id生成方案有哪些","children":[]},{"level":3,"title":"19.雪花算法生成的ID由哪些部分组成?","slug":"_19-雪花算法生成的id由哪些部分组成","link":"#_19-雪花算法生成的id由哪些部分组成","children":[]},{"level":3,"title":"20.分布锁有哪些解决方案？","slug":"_20-分布锁有哪些解决方案","link":"#_20-分布锁有哪些解决方案","children":[]},{"level":3,"title":"21.Redis做分布式锁用什么命令？","slug":"_21-redis做分布式锁用什么命令","link":"#_21-redis做分布式锁用什么命令","children":[]},{"level":3,"title":"22.Redis做分布式锁死锁有哪些情况，如何解决？","slug":"_22-redis做分布式锁死锁有哪些情况-如何解决","link":"#_22-redis做分布式锁死锁有哪些情况-如何解决","children":[]},{"level":3,"title":"23.你设计微服务时遵循什么原则？","slug":"_23-你设计微服务时遵循什么原则","link":"#_23-你设计微服务时遵循什么原则","children":[]},{"level":3,"title":"24.Cookie 和 Session 有什么区别？如何使用Session进行身份验证？","slug":"_24-cookie-和-session-有什么区别-如何使用session进行身份验证","link":"#_24-cookie-和-session-有什么区别-如何使用session进行身份验证","children":[]},{"level":3,"title":"25.为什么Cookie 无法防止CSRF攻击，而token可以？","slug":"_25-为什么cookie-无法防止csrf攻击-而token可以","link":"#_25-为什么cookie-无法防止csrf攻击-而token可以","children":[]},{"level":3,"title":"26.什么是 Token?什么是 JWT?如何基于Token进行身份验证？","slug":"_26-什么是-token-什么是-jwt-如何基于token进行身份验证","link":"#_26-什么是-token-什么是-jwt-如何基于token进行身份验证","children":[]},{"level":3,"title":"27.springcloud核心组件有哪些？","slug":"_27-springcloud核心组件有哪些","link":"#_27-springcloud核心组件有哪些","children":[]},{"level":3,"title":"28.分布式锁的使⽤场景是什么？有哪些实现⽅案？","slug":"_28-分布式锁的使用场景是什么-有哪些实现方案","link":"#_28-分布式锁的使用场景是什么-有哪些实现方案","children":[]},{"level":3,"title":"29.如果没有Cookie,Session还能进⾏身份验证吗？","slug":"_29-如果没有cookie-session还能进行身份验证吗","link":"#_29-如果没有cookie-session还能进行身份验证吗","children":[]},{"level":3,"title":"30.什么是OAuth2.0协议？有哪⼏种认证⽅式？","slug":"_30-什么是oauth2-0协议-有哪几种认证方式","link":"#_30-什么是oauth2-0协议-有哪几种认证方式","children":[]},{"level":3,"title":"31.什么是SSO？与OAuth2.0有什么关系？","slug":"_31-什么是sso-与oauth2-0有什么关系","link":"#_31-什么是sso-与oauth2-0有什么关系","children":[]},{"level":3,"title":"32.epoll和poll的区别","slug":"_32-epoll和poll的区别","link":"#_32-epoll和poll的区别","children":[]},{"level":3,"title":"33.谈谈你对seata的理解","slug":"_33-谈谈你对seata的理解","link":"#_33-谈谈你对seata的理解","children":[]},{"level":3,"title":"34.什么是数据⼀致性？","slug":"_34-什么是数据一致性","link":"#_34-什么是数据一致性","children":[]},{"level":3,"title":"1.面向对象编程中，都有哪些设计原则","slug":"_1-面向对象编程中-都有哪些设计原则","link":"#_1-面向对象编程中-都有哪些设计原则","children":[]},{"level":3,"title":"2.设计模式的分类","slug":"_2-设计模式的分类","link":"#_2-设计模式的分类","children":[]},{"level":3,"title":"3.你知道哪些设计模式？","slug":"_3-你知道哪些设计模式","link":"#_3-你知道哪些设计模式","children":[]},{"level":3,"title":"1.什么是Nginx？","slug":"_1-什么是nginx","link":"#_1-什么是nginx","children":[]},{"level":3,"title":"2.Nginx 有哪些优点？","slug":"_2-nginx-有哪些优点","link":"#_2-nginx-有哪些优点","children":[]},{"level":3,"title":"3.Nginx应用场景？","slug":"_3-nginx应用场景","link":"#_3-nginx应用场景","children":[]},{"level":3,"title":"4.Nginx怎么处理请求的？","slug":"_4-nginx怎么处理请求的","link":"#_4-nginx怎么处理请求的","children":[]},{"level":3,"title":"5.什么是正向代理？","slug":"_5-什么是正向代理","link":"#_5-什么是正向代理","children":[]},{"level":3,"title":"6.什么是反向代理？","slug":"_6-什么是反向代理","link":"#_6-什么是反向代理","children":[]},{"level":3,"title":"7.反向代理服务器的优点是什么?","slug":"_7-反向代理服务器的优点是什么","link":"#_7-反向代理服务器的优点是什么","children":[]},{"level":3,"title":"8.Nginx负载均衡的算法怎么实现的?策略有哪些?","slug":"_8-nginx负载均衡的算法怎么实现的-策略有哪些","link":"#_8-nginx负载均衡的算法怎么实现的-策略有哪些","children":[]},{"level":3,"title":"9.限流怎么做的？","slug":"_9-限流怎么做的","link":"#_9-限流怎么做的","children":[]},{"level":3,"title":"10.生产中如何设置worker进程的数量呢？","slug":"_10-生产中如何设置worker进程的数量呢","link":"#_10-生产中如何设置worker进程的数量呢","children":[]},{"level":3,"title":"11.Nginx 如何开启压缩？","slug":"_11-nginx-如何开启压缩","link":"#_11-nginx-如何开启压缩","children":[]},{"level":3,"title":"12.请解释Nginx服务器上的Master和Worker进程分别是什么?","slug":"_12-请解释nginx服务器上的master和worker进程分别是什么","link":"#_12-请解释nginx服务器上的master和worker进程分别是什么","children":[]},{"level":3,"title":"1.应用层有哪些常见的协议？","slug":"_1-应用层有哪些常见的协议","link":"#_1-应用层有哪些常见的协议","children":[]},{"level":3,"title":"2.TCP 三次握手和四次挥手？","slug":"_2-tcp-三次握手和四次挥手","link":"#_2-tcp-三次握手和四次挥手","children":[]},{"level":3,"title":"3.TCP, UDP 协议的区别？","slug":"_3-tcp-udp-协议的区别","link":"#_3-tcp-udp-协议的区别","children":[]},{"level":3,"title":"4.TCP 如何保证可靠性？","slug":"_4-tcp-如何保证可靠性","link":"#_4-tcp-如何保证可靠性","children":[]},{"level":3,"title":"5.OSI 七层模型？","slug":"_5-osi-七层模型","link":"#_5-osi-七层模型","children":[]},{"level":3,"title":"6.TCP/IP 四层模型？","slug":"_6-tcp-ip-四层模型","link":"#_6-tcp-ip-四层模型","children":[]},{"level":3,"title":"7.为什么网络要分层？","slug":"_7-为什么网络要分层","link":"#_7-为什么网络要分层","children":[]},{"level":3,"title":"8.HTTP 协议介绍?","slug":"_8-http-协议介绍","link":"#_8-http-协议介绍","children":[]},{"level":3,"title":"9.HTTP 协议通信过程？","slug":"_9-http-协议通信过程","link":"#_9-http-协议通信过程","children":[]},{"level":3,"title":"10.HTTP 协议优点？","slug":"_10-http-协议优点","link":"#_10-http-协议优点","children":[]},{"level":3,"title":"11.HTTPS 协议介绍？","slug":"_11-https-协议介绍","link":"#_11-https-协议介绍","children":[]},{"level":3,"title":"12.HTTPS 协议优点?","slug":"_12-https-协议优点","link":"#_12-https-协议优点","children":[]},{"level":3,"title":"13.SSL/TLS 的工作原理?","slug":"_13-ssl-tls-的工作原理","link":"#_13-ssl-tls-的工作原理","children":[]},{"level":3,"title":"14.HTTP与HTTPS区别？","slug":"_14-http与https区别","link":"#_14-http与https区别","children":[]},{"level":3,"title":"15.Forward 和 Redirect 的区别？","slug":"_15-forward-和-redirect-的区别","link":"#_15-forward-和-redirect-的区别","children":[]},{"level":3,"title":"16.说一下HTTP的长连接与短连接的区别？","slug":"_16-说一下http的长连接与短连接的区别","link":"#_16-说一下http的长连接与短连接的区别","children":[]},{"level":3,"title":"1.什么是操作系统？","slug":"_1-什么是操作系统","link":"#_1-什么是操作系统","children":[]},{"level":3,"title":"2.什么是系统调用呢？","slug":"_2-什么是系统调用呢","link":"#_2-什么是系统调用呢","children":[]},{"level":3,"title":"3.操作系统的内存管理主要是做什么？","slug":"_3-操作系统的内存管理主要是做什么","link":"#_3-操作系统的内存管理主要是做什么","children":[]},{"level":3,"title":"4.操作系统的内存管理机制了解吗？内存管理有哪几种方式?","slug":"_4-操作系统的内存管理机制了解吗-内存管理有哪几种方式","link":"#_4-操作系统的内存管理机制了解吗-内存管理有哪几种方式","children":[]},{"level":3,"title":"1.#{}和${}的区别是什么？","slug":"_1-和-的区别是什么","link":"#_1-和-的区别是什么","children":[]},{"level":3,"title":"2.Xml 映射文件中，除了常见的 select|insert|update|delete 标签之外，还有哪些标签？","slug":"_2-xml-映射文件中-除了常见的-select-insert-update-delete-标签之外-还有哪些标签","link":"#_2-xml-映射文件中-除了常见的-select-insert-update-delete-标签之外-还有哪些标签","children":[]},{"level":3,"title":"3.通常一个 Xml 映射文件，都会写一个 Dao 接口与之对应，请问，这个 Dao 接口的工作原理是什么？Dao 接口里的方法，参数不同时，方法能重载吗？","slug":"_3-通常一个-xml-映射文件-都会写一个-dao-接口与之对应-请问-这个-dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗","link":"#_3-通常一个-xml-映射文件-都会写一个-dao-接口与之对应-请问-这个-dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗","children":[]},{"level":3,"title":"4.MyBatis 是如何进行分页的？分页插件的原理是什么？","slug":"_4-mybatis-是如何进行分页的-分页插件的原理是什么","link":"#_4-mybatis-是如何进行分页的-分页插件的原理是什么","children":[]},{"level":3,"title":"5.说说Mybatis的缓存机制:","slug":"_5-说说mybatis的缓存机制","link":"#_5-说说mybatis的缓存机制","children":[]},{"level":3,"title":"6.什么是 Mybatis？","slug":"_6-什么是-mybatis","link":"#_6-什么是-mybatis","children":[]},{"level":3,"title":"7.MyBatis 编程步骤","slug":"_7-mybatis-编程步骤","link":"#_7-mybatis-编程步骤","children":[]},{"level":3,"title":"8.Mybatis 动态 SQL 是做什么的？都有哪些动态 SQL ？能简述一下动态 SQL 的执行原理吗？","slug":"_8-mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理吗","link":"#_8-mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理吗","children":[]},{"level":3,"title":"9.通常一个 XML 映射文件，都会写一个 Mapper 接口与之对应。请问，这个 Mapper 接口的工作原理是什么？Mapper 接口里的方法，参数不同时，方法能重载吗？","slug":"_9-通常一个-xml-映射文件-都会写一个-mapper-接口与之对应。请问-这个-mapper-接口的工作原理是什么-mapper-接口里的方法-参数不同时-方法能重载吗","link":"#_9-通常一个-xml-映射文件-都会写一个-mapper-接口与之对应。请问-这个-mapper-接口的工作原理是什么-mapper-接口里的方法-参数不同时-方法能重载吗","children":[]},{"level":3,"title":"10.Mybatis 都有哪些 Executor 执行器？它们之间的区别是什么？","slug":"_10-mybatis-都有哪些-executor-执行器-它们之间的区别是什么","link":"#_10-mybatis-都有哪些-executor-执行器-它们之间的区别是什么","children":[]},{"level":3,"title":"11.MyBatis 如何执行批量插入?","slug":"_11-mybatis-如何执行批量插入","link":"#_11-mybatis-如何执行批量插入","children":[]},{"level":3,"title":"12.Mybatis 映射文件中，如果 A 标签通过 include 引用了B标签的内容，请问，B 标签能否定义在 A 标签的后面，还是说必须定义在A标签的前面？","slug":"_12-mybatis-映射文件中-如果-a-标签通过-include-引用了b标签的内容-请问-b-标签能否定义在-a-标签的后面-还是说必须定义在a标签的前面","link":"#_12-mybatis-映射文件中-如果-a-标签通过-include-引用了b标签的内容-请问-b-标签能否定义在-a-标签的后面-还是说必须定义在a标签的前面","children":[]},{"level":3,"title":"13.mybatis缓存模块","slug":"_13-mybatis缓存模块","link":"#_13-mybatis缓存模块","children":[]},{"level":3,"title":"14.mybatis sql执行整体过程","slug":"_14-mybatis-sql执行整体过程","link":"#_14-mybatis-sql执行整体过程","children":[]},{"level":3,"title":"15.mybatis连接池添加连接与获取连接","slug":"_15-mybatis连接池添加连接与获取连接","link":"#_15-mybatis连接池添加连接与获取连接","children":[]},{"level":3,"title":"16.什么是mybatis一级缓存、二级缓存","slug":"_16-什么是mybatis一级缓存、二级缓存","link":"#_16-什么是mybatis一级缓存、二级缓存","children":[]},{"level":3,"title":"17.BatchExecutor","slug":"_17-batchexecutor","link":"#_17-batchexecutor","children":[]},{"level":3,"title":"18.jdbc编程步骤","slug":"_18-jdbc编程步骤","link":"#_18-jdbc编程步骤","children":[]}],"git":{"createdTime":1709190228000,"updatedTime":1709190228000,"contributors":[{"name":"付绪壮","email":"2235602974@qq.com","commits":1}]},"readingTime":{"minutes":1056.13,"words":158419},"filePathRelative":"offer/offer-started.md","localizedDate":"2024年2月29日","copyright":{}}');export{l as data};
